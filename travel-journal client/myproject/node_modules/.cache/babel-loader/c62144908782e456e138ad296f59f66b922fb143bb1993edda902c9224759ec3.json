{"ast":null,"code":"\n// import { useState, useEffect } from \"react\";\n// import \"./Store.css\"\n// const Store = () => {\n//   const [books, setBooks] = useState([]);\n//   const [selectedBook, setSelectedBook] = useState(null);\n\n//   async function showBook() {\n//     try {\n//       const response = await fetch(\"http://localhost:7002/api/books\");\n//       const data = await response.json();\n//       setBooks(data);\n//     } catch (error) {\n//       console.log(\"failed to fetch\");\n//     }\n//   }\n\n//   useEffect(() => {\n//     showBook();\n//   }, []);\n\n//   const deleteBook = (book) => {\n//     var myHeaders = new Headers();\n//     myHeaders.append(\"Content-Type\", \"application/json\");\n\n//     var raw = JSON.stringify({\n//       code: book._id\n//     });\n\n//     var requestOptions = {\n//       method: \"DELETE\",\n//       headers: myHeaders,\n//       body: raw,\n//       redirect: \"follow\"\n//     };\n\n//     fetch(\"http://localhost:7002/api/books\", requestOptions)\n//       .then((response) => response.text())\n//       .then((result) => {\n//         alert(result);\n//         setBooks((prevCartItems) =>\n//           prevCartItems.filter((item) => item._id !== book._id)\n//         );\n//       })\n//       .catch((error) => console.log(\"error\", error));\n//   };\n\n//   const updateBook = (book) => {\n//     setSelectedBook({...book});\n//     document.getElementById(\"dialog\").showModal();\n//   };\n\n//   useEffect(() => {\n//     if (selectedBook) {\n//       document.getElementById(\"name\").value = selectedBook.name;\n//       document.getElementById(\"code\").value = selectedBook.code;\n//       document.getElementById(\"price\").value = selectedBook.price;\n//       document.getElementById(\"author\").value = selectedBook.author;\n//       document.getElementById(\"image\").value = selectedBook.image;\n//     }\n//   }, [selectedBook]);\n//   const update = async (book) => {\n//     var myHeaders = new Headers();\n//     myHeaders.append(\"Content-Type\", \"application/json\");\n\n//     var raw = JSON.stringify({\n//       name: book.name,\n//       code: book.code,\n//       price: book.price,\n//       author: book.author,\n//       image: book.image\n//     });\n\n//     var requestOptions = {\n//       method: \"PUT\",\n//       headers: myHeaders,\n//       body: raw,\n//       redirect: \"follow\"\n//     };\n\n//     fetch(\"http://localhost:7002/api/books\", requestOptions)\n//       .then((response) => response.text())\n//       .then((result) => {\n//         console.log(result);\n//         setBooks((prevBooks) => {\n//           const updatedBooks = [...prevBooks];\n//           const updatedIndex = updatedBooks.findIndex(\n//             (book) => book.code === selectedBook.code\n//           );\n//           updatedBooks[updatedIndex] = {\n//             ...updatedBooks[updatedIndex],\n//             name: book.name,\n//             code: book.code,\n//             price: book.price,\n//             author: book.author,\n//             image: book.image\n//           };\n//           return updatedBooks;\n//         });\n//       })\n//       .catch((error) => console.log(\"error\", error));\n\n//     document.getElementById(\"dialog\").close();\n//   };\n\n//   const cancel = () => {\n//     document.getElementById(\"dialog\").close();\n//   };\n\n// const addNewBook=()=>{\n\n//   var myHeaders = new Headers();\n// myHeaders.append(\"Content-Type\", \"application/json\");\n\n// var raw = JSON.stringify({\n//   \"name\":document.getElementById(\"name\").value ,\n//   \"code\":document.getElementById(\"code\").value ,\n//   \"price\":document.getElementById(\"price\").value ,\n//   \"author\":document.getElementById(\"author\").value,\n//   \"image\":document.getElementById(\"image\").value \n// });\n\n// var requestOptions = {\n//   method: 'POST',\n//   headers: myHeaders,\n//   body: raw,\n//   redirect: 'follow'\n// };\n\n// fetch(\"http://localhost:7002/api/books\", requestOptions)\n//   .then(response => response.text())\n//   .then((result) => {\n//     alert(result);\n\n//   })\n//   .catch(error => console.log('error', error));\n\n//   document.getElementById(\"dialog\").close();\n\n// }\n//   return (\n//     <>\n//      <img src=\"w.jpg\" style={{ heignt: \"180px\", width: \"180px\", fontFamily: \"initial\" }}></img>\n//       <button onClick={() => updateBook({})}>Add New Book</button>\n\n//       {books &&\n//         books.map((book, index) => {\n//           return (\n//             <div className=\"border\" key={book._id}>\n//               <img\n//                 src={book.image}\n//                 style={{ heignt: \"150px\", width: \"200px\", fontFamily: \"initial\" }}\n//               ></img>\n//               <div>{book.name + \" | \" + book.price + \"â‚ª\"}</div>\n//               <button key={index} onClick={() => updateBook(book)}>\n//                 Edit\n//               </button>\n\n//               <dialog id=\"dialog\">\n//                 <h1>Add/Edit-Book</h1>\n//               name\n//               <br></br>\n//                 <input id=\"name\" placeholder=\"name\" defaultValue={selectedBook ? selectedBook.name : \"\"} onBlur={(e) =>\n//                     setSelectedBook({\n//                       ...selectedBook,\n//                       name: e.target.value\n//                     })}></input>\n\n//                 <br></br>\n//                 code\n//                 <br></br>\n//                 <input id=\"code\" placeholder=\"code\"\n\n//                   defaultValue={selectedBook ? selectedBook.code : \"\"}\n//                   onBlur={(e) =>\n//                     setSelectedBook({\n//                       ...selectedBook,\n//                       code: e.target.value\n//                     })\n//                   }\n//                 ></input>\n//                 <br></br>\n//                 price\n//                 <br></br>\n//                 <input id=\"price\" placeholder=\"price\"\n//                   defaultValue={selectedBook ? selectedBook.price : \"\"}\n//                   onBlur={(e) =>\n//                     setSelectedBook({\n//                       ...selectedBook,\n//                       price: e.target.value\n//                     })\n//                   }\n//                 ></input>\n//                 <br></br>\n//                 author\n//                 <br></br>\n//                 <textarea id=\"author\" placeholder=\"author\"\n//                   defaultValue={selectedBook ? selectedBook.author : \"\"}\n//                   onBlur={(e) =>\n//                     setSelectedBook({\n//                       ...selectedBook,\n//                       author: e.target.value\n//                     })\n//                   }\n//                 ></textarea>\n//                 <br></br>\n//                 image-url\n//                 <br></br>\n//                 <input id=\"image\" placeholder=\"image url\"\n//                   defaultValue={selectedBook ? selectedBook.image : \"\"}\n//                   onBlur={(e) =>\n//                     setSelectedBook({\n//                       ...selectedBook,\n//                       image: e.target.value\n//                     })\n//                   }\n//                 ></input>\n//                 <br></br>\n//                 <img\n//                   src={selectedBook ? selectedBook.image : \"\"}\n//                   style={{ heignt: \"150px\", width: \"200px\", fontFamily: \"initial\" }}\n//                 ></img>\n//                 <br></br>\n//                 <button onClick={() => update(selectedBook)}>edit</button>\n//                 <button onClick={() =>addNewBook()}>create</button>\n//                 <button onClick={cancel}>cancel</button>\n//               </dialog>\n//               <button onClick={() => deleteBook(book)}>Remove</button>\n//             </div>\n//           );\n//         })}\n//     </>\n//   );\n// };","map":{"version":3,"names":[],"sources":["E:/react/myproject/src/pages/Store/Store.js"],"sourcesContent":["\r\n// import { useState, useEffect } from \"react\";\r\n// import \"./Store.css\"\r\n// const Store = () => {\r\n//   const [books, setBooks] = useState([]);\r\n//   const [selectedBook, setSelectedBook] = useState(null);\r\n\r\n//   async function showBook() {\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:7002/api/books\");\r\n//       const data = await response.json();\r\n//       setBooks(data);\r\n//     } catch (error) {\r\n//       console.log(\"failed to fetch\");\r\n//     }\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     showBook();\r\n//   }, []);\r\n\r\n//   const deleteBook = (book) => {\r\n//     var myHeaders = new Headers();\r\n//     myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n//     var raw = JSON.stringify({\r\n//       code: book._id\r\n//     });\r\n\r\n//     var requestOptions = {\r\n//       method: \"DELETE\",\r\n//       headers: myHeaders,\r\n//       body: raw,\r\n//       redirect: \"follow\"\r\n//     };\r\n\r\n//     fetch(\"http://localhost:7002/api/books\", requestOptions)\r\n//       .then((response) => response.text())\r\n//       .then((result) => {\r\n//         alert(result);\r\n//         setBooks((prevCartItems) =>\r\n//           prevCartItems.filter((item) => item._id !== book._id)\r\n//         );\r\n//       })\r\n//       .catch((error) => console.log(\"error\", error));\r\n//   };\r\n\r\n//   const updateBook = (book) => {\r\n//     setSelectedBook({...book});\r\n//     document.getElementById(\"dialog\").showModal();\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (selectedBook) {\r\n//       document.getElementById(\"name\").value = selectedBook.name;\r\n//       document.getElementById(\"code\").value = selectedBook.code;\r\n//       document.getElementById(\"price\").value = selectedBook.price;\r\n//       document.getElementById(\"author\").value = selectedBook.author;\r\n//       document.getElementById(\"image\").value = selectedBook.image;\r\n//     }\r\n//   }, [selectedBook]);\r\n//   const update = async (book) => {\r\n//     var myHeaders = new Headers();\r\n//     myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n//     var raw = JSON.stringify({\r\n//       name: book.name,\r\n//       code: book.code,\r\n//       price: book.price,\r\n//       author: book.author,\r\n//       image: book.image\r\n//     });\r\n\r\n//     var requestOptions = {\r\n//       method: \"PUT\",\r\n//       headers: myHeaders,\r\n//       body: raw,\r\n//       redirect: \"follow\"\r\n//     };\r\n\r\n//     fetch(\"http://localhost:7002/api/books\", requestOptions)\r\n//       .then((response) => response.text())\r\n//       .then((result) => {\r\n//         console.log(result);\r\n//         setBooks((prevBooks) => {\r\n//           const updatedBooks = [...prevBooks];\r\n//           const updatedIndex = updatedBooks.findIndex(\r\n//             (book) => book.code === selectedBook.code\r\n//           );\r\n//           updatedBooks[updatedIndex] = {\r\n//             ...updatedBooks[updatedIndex],\r\n//             name: book.name,\r\n//             code: book.code,\r\n//             price: book.price,\r\n//             author: book.author,\r\n//             image: book.image\r\n//           };\r\n//           return updatedBooks;\r\n//         });\r\n//       })\r\n//       .catch((error) => console.log(\"error\", error));\r\n\r\n//     document.getElementById(\"dialog\").close();\r\n//   };\r\n\r\n//   const cancel = () => {\r\n//     document.getElementById(\"dialog\").close();\r\n//   };\r\n\r\n// const addNewBook=()=>{\r\n\r\n//   var myHeaders = new Headers();\r\n// myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n// var raw = JSON.stringify({\r\n//   \"name\":document.getElementById(\"name\").value ,\r\n//   \"code\":document.getElementById(\"code\").value ,\r\n//   \"price\":document.getElementById(\"price\").value ,\r\n//   \"author\":document.getElementById(\"author\").value,\r\n//   \"image\":document.getElementById(\"image\").value \r\n// });\r\n\r\n// var requestOptions = {\r\n//   method: 'POST',\r\n//   headers: myHeaders,\r\n//   body: raw,\r\n//   redirect: 'follow'\r\n// };\r\n\r\n// fetch(\"http://localhost:7002/api/books\", requestOptions)\r\n//   .then(response => response.text())\r\n//   .then((result) => {\r\n//     alert(result);\r\n \r\n//   })\r\n//   .catch(error => console.log('error', error));\r\n  \r\n//   document.getElementById(\"dialog\").close();\r\n\r\n// }\r\n//   return (\r\n//     <>\r\n//      <img src=\"w.jpg\" style={{ heignt: \"180px\", width: \"180px\", fontFamily: \"initial\" }}></img>\r\n//       <button onClick={() => updateBook({})}>Add New Book</button>\r\n\r\n//       {books &&\r\n//         books.map((book, index) => {\r\n//           return (\r\n//             <div className=\"border\" key={book._id}>\r\n//               <img\r\n//                 src={book.image}\r\n//                 style={{ heignt: \"150px\", width: \"200px\", fontFamily: \"initial\" }}\r\n//               ></img>\r\n//               <div>{book.name + \" | \" + book.price + \"â‚ª\"}</div>\r\n//               <button key={index} onClick={() => updateBook(book)}>\r\n//                 Edit\r\n//               </button>\r\n\r\n//               <dialog id=\"dialog\">\r\n//                 <h1>Add/Edit-Book</h1>\r\n//               name\r\n//               <br></br>\r\n//                 <input id=\"name\" placeholder=\"name\" defaultValue={selectedBook ? selectedBook.name : \"\"} onBlur={(e) =>\r\n//                     setSelectedBook({\r\n//                       ...selectedBook,\r\n//                       name: e.target.value\r\n//                     })}></input>\r\n        \r\n//                 <br></br>\r\n//                 code\r\n//                 <br></br>\r\n//                 <input id=\"code\" placeholder=\"code\"\r\n               \r\n//                   defaultValue={selectedBook ? selectedBook.code : \"\"}\r\n//                   onBlur={(e) =>\r\n//                     setSelectedBook({\r\n//                       ...selectedBook,\r\n//                       code: e.target.value\r\n//                     })\r\n//                   }\r\n//                 ></input>\r\n//                 <br></br>\r\n//                 price\r\n//                 <br></br>\r\n//                 <input id=\"price\" placeholder=\"price\"\r\n//                   defaultValue={selectedBook ? selectedBook.price : \"\"}\r\n//                   onBlur={(e) =>\r\n//                     setSelectedBook({\r\n//                       ...selectedBook,\r\n//                       price: e.target.value\r\n//                     })\r\n//                   }\r\n//                 ></input>\r\n//                 <br></br>\r\n//                 author\r\n//                 <br></br>\r\n//                 <textarea id=\"author\" placeholder=\"author\"\r\n//                   defaultValue={selectedBook ? selectedBook.author : \"\"}\r\n//                   onBlur={(e) =>\r\n//                     setSelectedBook({\r\n//                       ...selectedBook,\r\n//                       author: e.target.value\r\n//                     })\r\n//                   }\r\n//                 ></textarea>\r\n//                 <br></br>\r\n//                 image-url\r\n//                 <br></br>\r\n//                 <input id=\"image\" placeholder=\"image url\"\r\n//                   defaultValue={selectedBook ? selectedBook.image : \"\"}\r\n//                   onBlur={(e) =>\r\n//                     setSelectedBook({\r\n//                       ...selectedBook,\r\n//                       image: e.target.value\r\n//                     })\r\n//                   }\r\n//                 ></input>\r\n//                 <br></br>\r\n//                 <img\r\n//                   src={selectedBook ? selectedBook.image : \"\"}\r\n//                   style={{ heignt: \"150px\", width: \"200px\", fontFamily: \"initial\" }}\r\n//                 ></img>\r\n//                 <br></br>\r\n//                 <button onClick={() => update(selectedBook)}>edit</button>\r\n//                 <button onClick={() =>addNewBook()}>create</button>\r\n//                 <button onClick={cancel}>cancel</button>\r\n//               </dialog>\r\n//               <button onClick={() => deleteBook(book)}>Remove</button>\r\n//             </div>\r\n//           );\r\n//         })}\r\n//     </>\r\n//   );\r\n// };\r\n\r\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}