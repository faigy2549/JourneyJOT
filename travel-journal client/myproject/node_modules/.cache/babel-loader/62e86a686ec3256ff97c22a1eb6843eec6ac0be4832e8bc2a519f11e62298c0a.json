{"ast":null,"code":"import setProducts from \"./pages/Register/Register\";\nconst loginService = user => {\n  // TODO: here call server by fetch\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  var raw = JSON.stringify({\n    \"userName\": user.userName,\n    \"password\": user.p\n  });\n  var requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n  var res;\n  fetch(\"http://localhost:7002/api/auths/login\", requestOptions).then(response => response.text()).then(res => console.log(result)).catch(error => console.log('error', error));\n  return new Promise((resolve, reject) => {\n    resolve({\n      loginStatus: \"ok\",\n      data: {\n        id: user.password,\n        name: user.userName,\n        userToken: res\n      }\n    });\n  });\n};\nconst registerService = () => {\n  // TODO: here call server by fetch\n  console.log(\"registered!\");\n};\nexport { loginService, registerService };","map":{"version":3,"names":["setProducts","loginService","user","myHeaders","Headers","append","raw","JSON","stringify","userName","p","requestOptions","method","headers","body","redirect","res","fetch","then","response","text","console","log","result","catch","error","Promise","resolve","reject","loginStatus","data","id","password","name","userToken","registerService"],"sources":["E:/project/myproject/src/services.js"],"sourcesContent":["import setProducts from \"./pages/Register/Register\"\r\nconst loginService = (user) => {\r\n  // TODO: here call server by fetch\r\n  var myHeaders = new Headers();\r\n  myHeaders.append(\"Content-Type\", \"application/json\");\r\n  \r\n  var raw = JSON.stringify({\r\n    \"userName\": user.userName,\r\n    \"password\": user.p\r\n  });\r\n  \r\n  var requestOptions = {\r\n    method: 'POST',\r\n    headers: myHeaders,\r\n    body: raw,\r\n    redirect: 'follow'\r\n  };\r\n  var res\r\n  fetch(\"http://localhost:7002/api/auths/login\", requestOptions)\r\n    .then(response => response.text())\r\n    .then(res=> console.log(result))\r\n    .catch(error => console.log('error', error));\r\n\r\n  return new Promise((resolve, reject) => {\r\n    resolve({\r\n      loginStatus: \"ok\",\r\n      data: { id: user.password, name: user.userName, userToken: res },\r\n    });\r\n  });\r\n};\r\n\r\n\r\n\r\nconst registerService = () => {\r\n  // TODO: here call server by fetch\r\n  console.log(\"registered!\");\r\n};\r\n\r\nexport { loginService, registerService };\r\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,2BAA2B;AACnD,MAAMC,YAAY,GAAIC,IAAI,IAAK;EAC7B;EACA,IAAIC,SAAS,GAAG,IAAIC,OAAO,CAAC,CAAC;EAC7BD,SAAS,CAACE,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC;EAEpD,IAAIC,GAAG,GAAGC,IAAI,CAACC,SAAS,CAAC;IACvB,UAAU,EAAEN,IAAI,CAACO,QAAQ;IACzB,UAAU,EAAEP,IAAI,CAACQ;EACnB,CAAC,CAAC;EAEF,IAAIC,cAAc,GAAG;IACnBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAEV,SAAS;IAClBW,IAAI,EAAER,GAAG;IACTS,QAAQ,EAAE;EACZ,CAAC;EACD,IAAIC,GAAG;EACPC,KAAK,CAAC,uCAAuC,EAAEN,cAAc,CAAC,CAC3DO,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACF,GAAG,IAAGK,OAAO,CAACC,GAAG,CAACC,MAAM,CAAC,CAAC,CAC/BC,KAAK,CAACC,KAAK,IAAIJ,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEG,KAAK,CAAC,CAAC;EAE9C,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCD,OAAO,CAAC;MACNE,WAAW,EAAE,IAAI;MACjBC,IAAI,EAAE;QAAEC,EAAE,EAAE7B,IAAI,CAAC8B,QAAQ;QAAEC,IAAI,EAAE/B,IAAI,CAACO,QAAQ;QAAEyB,SAAS,EAAElB;MAAI;IACjE,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC;AAID,MAAMmB,eAAe,GAAGA,CAAA,KAAM;EAC5B;EACAd,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;AAC5B,CAAC;AAED,SAASrB,YAAY,EAAEkC,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}