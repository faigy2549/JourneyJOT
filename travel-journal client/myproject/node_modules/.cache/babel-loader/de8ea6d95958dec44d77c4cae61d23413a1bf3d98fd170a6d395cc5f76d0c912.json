{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import { fetchJournalEntrysByTripId, updateJournalEntry } from '../Services/JournalEntryService';\n// import { Sidebar } from 'primereact/sidebar';\n// import { Button } from 'primereact/button';\n// import { DataView } from 'primereact/dataview';\n// import { Editor } from \"primereact/editor\";\n// import {Card} from 'primereact/card'\n// import { FileUpload } from 'primereact/fileupload';\n// import {Rating} from 'primereact/rating'\n// import './style sheets/TripsView.css'\n// import { useNavigate,useParams } from 'react-router-dom';\n// import { fetchTripById } from '../Services/TripService';\n\n// const JournalView = () => {\n//     const [journalEntries, setJournalEntries] = useState([]);\n//     const [trip, setTrip] = useState(null);\n//     const [loading, setLoading] = useState(true);\n//     const [error, setError] = useState(null);\n//     const [selectedEntry, setSelectedEntry] = useState(null);\n//     const [visible, setVisible] = useState(true);\n//     const [text, setText] = useState(selectedEntry?.text);\n//     const [rating, setRating] = useState(selectedEntry?.rating);\n//     const navigate=useNavigate()\n//     const { tripId } = useParams();\n//     let index=1;\n\n//     useEffect(() => {\n//         fetchJournalEntrysByTripId(tripId)\n//         .then((data) => {\n//           const sortedEntries = data.sort((a, b) => new Date(a.date));\n//           setJournalEntries(sortedEntries);\n//         })\n//         .catch((error) => {\n//           console.error('Error fetching entries:', error);\n//           setError(error);\n//           setLoading(false);\n//         });\n//         fetchTripById(tripId)\n//         .then((data) => {\n//           setTrip(data);\n//           setLoading(false);\n//         })\n//         .catch((error) => {\n//           console.error('Error fetching entries:', error);\n//           setError(error);\n//           setLoading(false);\n//         });\n//     }, []);\n\n//     const saveJournalEntry = () => {\n//       const updatedEntry = { ...selectedEntry,text };\n//       const journalEntryDTO = {\n//         id: updatedEntry.id,\n//         text: updatedEntry.text,\n//         date: updatedEntry.date,\n//         location: updatedEntry.location,\n//         tripId: updatedEntry.tripId,\n//         photos: updatedEntry.photos.map((photo) => ({\n//           Id: photo.id,\n//           Url: photo.url,\n//           JournalEntryId: photo.id,\n//         })),\n//       };\n//   updateJournalEntry(selectedEntry.id, JSON.stringify(journalEntryDTO));\n//     }\n//    const addEntry=()=>{\n//     //create and return id and then open for editing like regular\n//    }\n//     const entryTemplate = (entry) => {\n//         return (\n//           <div className=\"col-12 sm:col-6 lg:col-12  p-2 \" key={entry.id} style={{ backgroundColor:\"#ADD8E6\"}}>\n//             <div className=\"p-4 border-1 surface-border surface-card border-round\" style={{ maxWidth: '100rem',  maxHeight: '25rem' }}>\n//               <div className=\"flex flex-wrap align-items-center justify-content-between gap-2\">\n//                 <div className=\"flex align-items-center gap-2\">\n//                   <i className=\"pi pi-calendar\"></i>\n//                   <span className=\"font-semibold\">{new Date(entry.date).toLocaleDateString('en-US', { day: 'numeric', month: 'short', year: 'numeric' })}</span>\n//                 </div>\n//               </div>\n//               <div className=\"flex flex-column align-items-center gap-3 py-5\">\n//                 <div className=\"text-2xl font-bold\">Day {index++}</div>\n//               </div>\n//               <div className=\"flex align-items-center justify-content-center\">\n//                   <Button\n//                     icon=\"pi pi-eye \"\n//                     className=\"p-button-rounded\"\n//                     onClick={() =>{\n//                       setSelectedEntry(entry);\n//                       setVisible(false)\n//                       setText(entry.text)\n//                       }}\n//                   >\n//                   </Button>\n//               </div>\n//             </div>\n//           </div>\n//         );\n//       };\n//       const header = (\n//         <img alt=\"Card\" style={{height:\"10rem\"}}src={`https://localhost:44393/${trip?.coverPhotoUrl}`} />\n//     );\n//       const footer = (\n//         <>\n//             <Button label=\"Save\" icon=\"pi pi-check\" onClick={saveJournalEntry}/>\n//             <Button label=\"Cancel\" severity=\"secondary\" icon=\"pi pi-times\" style={{ marginLeft: '0.5em' }} />\n//         </>\n//     );\n\n//   return (\n// <> \n// <Button icon=\"pi pi-angle-right\"  onClick={() => setVisible(true)} />\n//     <div className=\"card flex justify-content-center\">\n//     <Sidebar visible={visible} onHide={() => setVisible(false)}>\n//         <h2>{trip?.title}         <Button icon=\"pi pi-plus\"  text raised size=\"small\" onClick={addEntry}></Button></h2>\n//         <br></br>\n//         <DataView \n//         value={journalEntries} \n//         itemTemplate={entryTemplate} \n//         layout={'grid'} \n//         cols={1} \n//         className=\"dataView\"\n//         />\n//     </Sidebar>\n//     {selectedEntry &&    \n//     <div className=\"card flex justify-content-center\">\n//         <Card \n//         title={<div className=\"flex align-items-center gap-2\">\n//                 <i className=\"pi pi-calendar\"></i>\n//                 <span className=\"font-semibold\">{new Date(selectedEntry.date).toLocaleDateString('en-US', { day: 'numeric', month: 'short', year: 'numeric' })}</span>\n//             </div>} \n//         subTitle={trip.title} \n//         footer={footer} \n//         header={header}  \n//         style={{width:\"80rem\"}}>\n//             <Editor value={text} onTextChange={(e) => setText(e.htmlValue)} style={{ height: '320px' }}/>\n//             <p> How would you rate your day?</p>\n//             <Rating value={rating} cancel={false} onChange={(e) => setRating(e.value)}></Rating>\n//             <p><i className=\"pi pi-map-marker\" /> Location: {selectedEntry.location}</p>\n//             <p><i className=\"pi pi-sun\" /> Weather: {selectedEntry.weather}</p>\n//             <p><i className=\"pi pi-images\" /> Photos:</p>\n//             <FileUpload name=\"demo[]\" url={'/api/upload'} multiple accept=\"image/*\" maxFileSize={1000000} emptyTemplate={<p className=\"m-0\">Drag and drop files to here to upload.</p>} />\n\n//         </Card>\n//     </div>}\n//  </div>\n// </>\n//   );\n// };\n\nexport default JournalView;","map":{"version":3,"names":["JournalView"],"sources":["C:/Users/faigy/OneDrive/Documents/travel journal project/travel-journal client/myproject/src/components/JournalView.jsx"],"sourcesContent":["\r\n// import React, { useEffect, useState } from 'react';\r\n// import { fetchJournalEntrysByTripId, updateJournalEntry } from '../Services/JournalEntryService';\r\n// import { Sidebar } from 'primereact/sidebar';\r\n// import { Button } from 'primereact/button';\r\n// import { DataView } from 'primereact/dataview';\r\n// import { Editor } from \"primereact/editor\";\r\n// import {Card} from 'primereact/card'\r\n// import { FileUpload } from 'primereact/fileupload';\r\n// import {Rating} from 'primereact/rating'\r\n// import './style sheets/TripsView.css'\r\n// import { useNavigate,useParams } from 'react-router-dom';\r\n// import { fetchTripById } from '../Services/TripService';\r\n\r\n// const JournalView = () => {\r\n//     const [journalEntries, setJournalEntries] = useState([]);\r\n//     const [trip, setTrip] = useState(null);\r\n//     const [loading, setLoading] = useState(true);\r\n//     const [error, setError] = useState(null);\r\n//     const [selectedEntry, setSelectedEntry] = useState(null);\r\n//     const [visible, setVisible] = useState(true);\r\n//     const [text, setText] = useState(selectedEntry?.text);\r\n//     const [rating, setRating] = useState(selectedEntry?.rating);\r\n//     const navigate=useNavigate()\r\n//     const { tripId } = useParams();\r\n//     let index=1;\r\n\r\n//     useEffect(() => {\r\n//         fetchJournalEntrysByTripId(tripId)\r\n//         .then((data) => {\r\n//           const sortedEntries = data.sort((a, b) => new Date(a.date));\r\n//           setJournalEntries(sortedEntries);\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error('Error fetching entries:', error);\r\n//           setError(error);\r\n//           setLoading(false);\r\n//         });\r\n//         fetchTripById(tripId)\r\n//         .then((data) => {\r\n//           setTrip(data);\r\n//           setLoading(false);\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error('Error fetching entries:', error);\r\n//           setError(error);\r\n//           setLoading(false);\r\n//         });\r\n//     }, []);\r\n\r\n//     const saveJournalEntry = () => {\r\n//       const updatedEntry = { ...selectedEntry,text };\r\n//       const journalEntryDTO = {\r\n//         id: updatedEntry.id,\r\n//         text: updatedEntry.text,\r\n//         date: updatedEntry.date,\r\n//         location: updatedEntry.location,\r\n//         tripId: updatedEntry.tripId,\r\n//         photos: updatedEntry.photos.map((photo) => ({\r\n//           Id: photo.id,\r\n//           Url: photo.url,\r\n//           JournalEntryId: photo.id,\r\n//         })),\r\n//       };\r\n//   updateJournalEntry(selectedEntry.id, JSON.stringify(journalEntryDTO));\r\n//     }\r\n//    const addEntry=()=>{\r\n//     //create and return id and then open for editing like regular\r\n//    }\r\n//     const entryTemplate = (entry) => {\r\n//         return (\r\n//           <div className=\"col-12 sm:col-6 lg:col-12  p-2 \" key={entry.id} style={{ backgroundColor:\"#ADD8E6\"}}>\r\n//             <div className=\"p-4 border-1 surface-border surface-card border-round\" style={{ maxWidth: '100rem',  maxHeight: '25rem' }}>\r\n//               <div className=\"flex flex-wrap align-items-center justify-content-between gap-2\">\r\n//                 <div className=\"flex align-items-center gap-2\">\r\n//                   <i className=\"pi pi-calendar\"></i>\r\n//                   <span className=\"font-semibold\">{new Date(entry.date).toLocaleDateString('en-US', { day: 'numeric', month: 'short', year: 'numeric' })}</span>\r\n//                 </div>\r\n//               </div>\r\n//               <div className=\"flex flex-column align-items-center gap-3 py-5\">\r\n//                 <div className=\"text-2xl font-bold\">Day {index++}</div>\r\n//               </div>\r\n//               <div className=\"flex align-items-center justify-content-center\">\r\n//                   <Button\r\n//                     icon=\"pi pi-eye \"\r\n//                     className=\"p-button-rounded\"\r\n//                     onClick={() =>{\r\n//                       setSelectedEntry(entry);\r\n//                       setVisible(false)\r\n//                       setText(entry.text)\r\n//                       }}\r\n//                   >\r\n//                   </Button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         );\r\n//       };\r\n//       const header = (\r\n//         <img alt=\"Card\" style={{height:\"10rem\"}}src={`https://localhost:44393/${trip?.coverPhotoUrl}`} />\r\n//     );\r\n//       const footer = (\r\n//         <>\r\n//             <Button label=\"Save\" icon=\"pi pi-check\" onClick={saveJournalEntry}/>\r\n//             <Button label=\"Cancel\" severity=\"secondary\" icon=\"pi pi-times\" style={{ marginLeft: '0.5em' }} />\r\n//         </>\r\n//     );\r\n\r\n//   return (\r\n// <> \r\n// <Button icon=\"pi pi-angle-right\"  onClick={() => setVisible(true)} />\r\n//     <div className=\"card flex justify-content-center\">\r\n//     <Sidebar visible={visible} onHide={() => setVisible(false)}>\r\n//         <h2>{trip?.title}         <Button icon=\"pi pi-plus\"  text raised size=\"small\" onClick={addEntry}></Button></h2>\r\n//         <br></br>\r\n//         <DataView \r\n//         value={journalEntries} \r\n//         itemTemplate={entryTemplate} \r\n//         layout={'grid'} \r\n//         cols={1} \r\n//         className=\"dataView\"\r\n//         />\r\n//     </Sidebar>\r\n//     {selectedEntry &&    \r\n//     <div className=\"card flex justify-content-center\">\r\n//         <Card \r\n//         title={<div className=\"flex align-items-center gap-2\">\r\n//                 <i className=\"pi pi-calendar\"></i>\r\n//                 <span className=\"font-semibold\">{new Date(selectedEntry.date).toLocaleDateString('en-US', { day: 'numeric', month: 'short', year: 'numeric' })}</span>\r\n//             </div>} \r\n//         subTitle={trip.title} \r\n//         footer={footer} \r\n//         header={header}  \r\n//         style={{width:\"80rem\"}}>\r\n//             <Editor value={text} onTextChange={(e) => setText(e.htmlValue)} style={{ height: '320px' }}/>\r\n//             <p> How would you rate your day?</p>\r\n//             <Rating value={rating} cancel={false} onChange={(e) => setRating(e.value)}></Rating>\r\n//             <p><i className=\"pi pi-map-marker\" /> Location: {selectedEntry.location}</p>\r\n//             <p><i className=\"pi pi-sun\" /> Weather: {selectedEntry.weather}</p>\r\n//             <p><i className=\"pi pi-images\" /> Photos:</p>\r\n//             <FileUpload name=\"demo[]\" url={'/api/upload'} multiple accept=\"image/*\" maxFileSize={1000000} emptyTemplate={<p className=\"m-0\">Drag and drop files to here to upload.</p>} />\r\n\r\n//         </Card>\r\n//     </div>}\r\n//  </div>\r\n// </>\r\n//   );\r\n// };\r\n\r\n export default JournalView;"],"mappingseAAeA,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}