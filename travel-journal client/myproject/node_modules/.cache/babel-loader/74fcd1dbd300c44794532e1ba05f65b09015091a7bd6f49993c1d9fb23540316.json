{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\myproject\\\\src\\\\pages\\\\Store\\\\Store.js\";\nimport setProducts from \"../Register/Register\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Store = () => {\n  var requestOptions = {\n    method: 'GET',\n    redirect: 'follow'\n  };\n  fetch(\"http://localhost:7002/api/books\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\n};\n_c = Store;\n/*#__PURE__*/_jsxDEV(\"h1\", {\n  children: \"\\u05D7\\u05E0\\u05D4 \\u05D5\\u05E4\\u05D9\\u05D9\\u05D2\\u05D9 \\u05DC\\u05D0 \\u05DC\\u05D4\\u05EA\\u05D9\\u05D9\\u05D0\\u05E9 \"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 1\n}, this);\n\n// async function fetchData() {\n//     try {\n//       const response = await fetch('http://localhost:7002/api/books')\n//       const data = await response.json();\n//       setProducts(data) \n//     }\n//     catch (error) {\n//       console.log(\"failed to fetch\");\n//     }\n\n//     return (\n//         setProducts(),\n//         <>\n//           {book.map((p)=>\n//           { return <div key={p._id}>\n//           {p.name + p.price+\"₪\"}\n//           <img src={p.Image} style={{ heignt: \"150px\", width:\"200px\", fontFamily: \"initial\" }}></img>\n//           <button onClick={() => deleteBook(p)}>DeleteBook</button>\n//           <button onClick={() => updateBook(p)}>Edit</button>\n//           </div>})}\n//         </>\n//       )\n//    }\n\nexport default Store;\nvar _c;\n$RefreshReg$(_c, \"Store\");","map":{"version":3,"names":["setProducts","jsxDEV","_jsxDEV","Store","requestOptions","method","redirect","fetch","then","response","text","result","console","log","catch","error","_c","children","fileName","_jsxFileName","lineNumber","columnNumber","$RefreshReg$"],"sources":["E:/react/myproject/src/pages/Store/Store.js"],"sourcesContent":["import setProducts from \"../Register/Register\"\r\n\r\n\r\n\r\nconst Store = ()=>{\r\nvar requestOptions = {\r\n    method: 'GET',\r\n    redirect: 'follow'\r\n  };\r\n  \r\n  fetch(\"http://localhost:7002/api/books\", requestOptions)\r\n    .then(response => response.text())\r\n    .then(result => console.log(result))\r\n    .catch(error => console.log('error', error));\r\n\r\n}\r\n<h1>חנה ופייגי לא להתייאש </h1>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// async function fetchData() {\r\n//     try {\r\n//       const response = await fetch('http://localhost:7002/api/books')\r\n//       const data = await response.json();\r\n//       setProducts(data) \r\n//     }\r\n//     catch (error) {\r\n//       console.log(\"failed to fetch\");\r\n//     }\r\n\r\n//     return (\r\n//         setProducts(),\r\n//         <>\r\n//           {book.map((p)=>\r\n//           { return <div key={p._id}>\r\n//           {p.name + p.price+\"₪\"}\r\n//           <img src={p.Image} style={{ heignt: \"150px\", width:\"200px\", fontFamily: \"initial\" }}></img>\r\n//           <button onClick={() => deleteBook(p)}>DeleteBook</button>\r\n//           <button onClick={() => updateBook(p)}>Edit</button>\r\n//           </div>})}\r\n//         </>\r\n//       )\r\n//    }\r\n    \r\n\r\n \r\nexport default Store;"],"mappings":";AAAA,OAAOA,WAAW,MAAM,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAI9C,MAAMC,KAAK,GAAGA,CAAA,KAAI;EAClB,IAAIC,cAAc,GAAG;IACjBC,MAAM,EAAE,KAAK;IACbC,QAAQ,EAAE;EACZ,CAAC;EAEDC,KAAK,CAAC,iCAAiC,EAAEH,cAAc,CAAC,CACrDI,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,MAAM,IAAIC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC,CAAC,CACnCG,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEE,KAAK,CAAC,CAAC;AAEhD,CAAC;AAAAC,EAAA,GAXKb,KAAK;AAYX,aAAAD,OAAA;EAAAe,QAAA,EAAI;AAAsB;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAI,CAAC;;AAmC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,eAAelB,KAAK;AAAC,IAAAa,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}