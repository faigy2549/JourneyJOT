{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\faigy\\\\OneDrive\\\\Documents\\\\travel journal project\\\\travel-journal client\\\\myproject\\\\src\\\\components\\\\JournalView.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { fetchJournalEntrysByTripId, updateJournalEntry } from '../Services/JournalEntryService';\n// import { Sidebar } from 'primereact/sidebar';\n// import { Button } from 'primereact/button';\n// import { DataView } from 'primereact/dataview';\n// import { Editor } from \"primereact/editor\";\n// import {Card} from 'primereact/card'\n// import { FileUpload } from 'primereact/fileupload';\n// import {Rating} from 'primereact/rating'\n// import './style sheets/TripsView.css'\n// import { useNavigate,useParams } from 'react-router-dom';\n// import { fetchTripById } from '../Services/TripService';\n\n// const JournalView = () => {\n//     const [journalEntries, setJournalEntries] = useState([]);\n//     const [trip, setTrip] = useState(null);\n//     const [loading, setLoading] = useState(true);\n//     const [error, setError] = useState(null);\n//     const [selectedEntry, setSelectedEntry] = useState(null);\n//     const [visible, setVisible] = useState(true);\n//     const [text, setText] = useState(selectedEntry?.text);\n//     const [rating, setRating] = useState(selectedEntry?.rating);\n//     const navigate=useNavigate()\n//     const { tripId } = useParams();\n//     let index=1;\n\n//     useEffect(() => {\n//         fetchJournalEntrysByTripId(tripId)\n//         .then((data) => {\n//           const sortedEntries = data.sort((a, b) => new Date(a.date));\n//           setJournalEntries(sortedEntries);\n//         })\n//         .catch((error) => {\n//           console.error('Error fetching entries:', error);\n//           setError(error);\n//           setLoading(false);\n//         });\n//         fetchTripById(tripId)\n//         .then((data) => {\n//           setTrip(data);\n//           setLoading(false);\n//         })\n//         .catch((error) => {\n//           console.error('Error fetching entries:', error);\n//           setError(error);\n//           setLoading(false);\n//         });\n//     }, []);\n\n//     const saveJournalEntry = () => {\n//       const updatedEntry = { ...selectedEntry,text };\n//       const journalEntryDTO = {\n//         id: updatedEntry.id,\n//         text: updatedEntry.text,\n//         date: updatedEntry.date,\n//         location: updatedEntry.location,\n//         tripId: updatedEntry.tripId,\n//         photos: updatedEntry.photos.map((photo) => ({\n//           Id: photo.id,\n//           Url: photo.url,\n//           JournalEntryId: photo.id,\n//         })),\n//       };\n//   updateJournalEntry(selectedEntry.id, JSON.stringify(journalEntryDTO));\n//     }\n//    const addEntry=()=>{\n//     //create and return id and then open for editing like regular\n//    }\n//     const entryTemplate = (entry) => {\n//         return (\n//           <div className=\"col-12 sm:col-6 lg:col-12  p-2 \" key={entry.id} style={{ backgroundColor:\"#ADD8E6\"}}>\n//             <div className=\"p-4 border-1 surface-border surface-card border-round\" style={{ maxWidth: '100rem',  maxHeight: '25rem' }}>\n//               <div className=\"flex flex-wrap align-items-center justify-content-between gap-2\">\n//                 <div className=\"flex align-items-center gap-2\">\n//                   <i className=\"pi pi-calendar\"></i>\n//                   <span className=\"font-semibold\">{new Date(entry.date).toLocaleDateString('en-US', { day: 'numeric', month: 'short', year: 'numeric' })}</span>\n//                 </div>\n//               </div>\n//               <div className=\"flex flex-column align-items-center gap-3 py-5\">\n//                 <div className=\"text-2xl font-bold\">Day {index++}</div>\n//               </div>\n//               <div className=\"flex align-items-center justify-content-center\">\n//                   <Button\n//                     icon=\"pi pi-eye \"\n//                     className=\"p-button-rounded\"\n//                     onClick={() =>{\n//                       setSelectedEntry(entry);\n//                       setVisible(false)\n//                       setText(entry.text)\n//                       }}\n//                   >\n//                   </Button>\n//               </div>\n//             </div>\n//           </div>\n//         );\n//       };\n//       const header = (\n//         <img alt=\"Card\" style={{height:\"10rem\"}}src={`https://localhost:44393/${trip?.coverPhotoUrl}`} />\n//     );\n//       const footer = (\n//         <>\n//             <Button label=\"Save\" icon=\"pi pi-check\" onClick={saveJournalEntry}/>\n//             <Button label=\"Cancel\" severity=\"secondary\" icon=\"pi pi-times\" style={{ marginLeft: '0.5em' }} />\n//         </>\n//     );\n\n//   return (\n// <> \n// <Button icon=\"pi pi-angle-right\"  onClick={() => setVisible(true)} />\n//     <div className=\"card flex justify-content-center\">\n//     <Sidebar visible={visible} onHide={() => setVisible(false)}>\n//         <h2>{trip?.title}         <Button icon=\"pi pi-plus\"  text raised size=\"small\" onClick={addEntry}></Button></h2>\n//         <br></br>\n//         <DataView \n//         value={journalEntries} \n//         itemTemplate={entryTemplate} \n//         layout={'grid'} \n//         cols={1} \n//         className=\"dataView\"\n//         />\n//     </Sidebar>\n//     {selectedEntry &&    \n//     <div className=\"card flex justify-content-center\">\n//         <Card \n//         title={<div className=\"flex align-items-center gap-2\">\n//                 <i className=\"pi pi-calendar\"></i>\n//                 <span className=\"font-semibold\">{new Date(selectedEntry.date).toLocaleDateString('en-US', { day: 'numeric', month: 'short', year: 'numeric' })}</span>\n//             </div>} \n//         subTitle={trip.title} \n//         footer={footer} \n//         header={header}  \n//         style={{width:\"80rem\"}}>\n//             <Editor value={text} onTextChange={(e) => setText(e.htmlValue)} style={{ height: '320px' }}/>\n//             <p> How would you rate your day?</p>\n//             <Rating value={rating} cancel={false} onChange={(e) => setRating(e.value)}></Rating>\n//             <p><i className=\"pi pi-map-marker\" /> Location: {selectedEntry.location}</p>\n//             <p><i className=\"pi pi-sun\" /> Weather: {selectedEntry.weather}</p>\n//             <p><i className=\"pi pi-images\" /> Photos:</p>\n//             <FileUpload name=\"demo[]\" url={'/api/upload'} multiple accept=\"image/*\" maxFileSize={1000000} emptyTemplate={<p className=\"m-0\">Drag and drop files to here to upload.</p>} />\n\n//         </Card>\n//     </div>}\n//  </div>\n// </>\n//   );\n// };\nimport React, { useState, useEffect } from 'react';\nimport { fetchJournalEntrysByTripId, updateJournalEntry } from '../Services/JournalEntryService';\nimport { Sidebar } from 'primereact/sidebar';\nimport { Button } from 'primereact/button';\nimport { DataView } from 'primereact/dataview';\nimport { Editor } from \"primereact/editor\";\nimport { Card } from 'primereact/card';\nimport { FileUpload } from 'primereact/fileupload';\nimport { Rating } from 'primereact/rating';\nimport './style sheets/TripsView.css';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { fetchTripById } from '../Services/TripService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst JournalView = () => {\n  _s();\n  const [journalEntries, setJournalEntries] = useState([]);\n  const [trip, setTrip] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [visible, setVisible] = useState(null);\n  const [selectedEntry, setSelectedEntry] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [text, setText] = useState('');\n  const [rating, setRating] = useState(0);\n  const navigate = useNavigate();\n  const {\n    tripId\n  } = useParams();\n  let index = 1;\n  useEffect(() => {\n    fetchJournalEntrysByTripId(tripId).then(data => {\n      const sortedEntries = data.sort((a, b) => new Date(a.date));\n      setJournalEntries(sortedEntries);\n    }).catch(error => {\n      console.error('Error fetching entries:', error);\n      setError(error);\n      setLoading(false);\n    });\n    fetchTripById(tripId).then(data => {\n      setTrip(data);\n      setLoading(false);\n    }).catch(error => {\n      console.error('Error fetching entries:', error);\n      setError(error);\n      setLoading(false);\n    });\n  }, []);\n  const saveJournalEntry = () => {\n    setIsEditing(false);\n    updateJournalEntry(selectedEntry.id, JSON.stringify({\n      id: selectedEntry.id,\n      text: text,\n      date: selectedEntry.date,\n      location: selectedEntry.location,\n      tripId: selectedEntry.tripId,\n      photos: selectedEntry.photos.map(photo => ({\n        Id: photo.id,\n        Url: photo.url,\n        JournalEntryId: photo.id\n      }))\n    }));\n  };\n  const addEntry = () => {\n    //create and return id and then open for editing like regular\n  };\n  const entryTemplate = entry => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 sm:col-6 lg:col-12  p-2 \",\n      style: {\n        backgroundColor: \"#ADD8E6\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-4 border-1 surface-border surface-card border-round\",\n        style: {\n          maxWidth: '100rem',\n          maxHeight: '25rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap align-items-center justify-content-between gap-2\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex align-items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"pi pi-calendar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-semibold\",\n              children: new Date(entry.date).toLocaleDateString('en-US', {\n                day: 'numeric',\n                month: 'short',\n                year: 'numeric'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-column align-items-center gap-3 py-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-2xl font-bold\",\n            children: [\"Day \", index++]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex align-items-center justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            icon: \"pi pi-eye \",\n            className: \"p-button-rounded\",\n            onClick: () => {\n              setSelectedEntry(entry);\n              setIsEditing(true);\n              setText(entry.text);\n              setRating(entry.rating);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this)\n    }, entry.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }, this);\n  };\n  const header = /*#__PURE__*/_jsxDEV(\"img\", {\n    alt: \"Card\",\n    style: {\n      height: \"10rem\"\n    },\n    src: `https://localhost:44393/${trip === null || trip === void 0 ? void 0 : trip.coverPhotoUrl}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 7\n  }, this);\n  const footer = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isEditing && /*#__PURE__*/_jsxDEV(Button, {\n      label: \"Save\",\n      icon: \"pi pi-check\",\n      onClick: saveJournalEntry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      label: \"Cancel\",\n      severity: \"secondary\",\n      icon: \"pi pi-times\",\n      style: {\n        marginLeft: '0.5em'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      icon: \"pi pi-angle-right\",\n      onClick: () => setVisible(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card flex justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        visible: visible,\n        onHide: () => setVisible(false),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [trip === null || trip === void 0 ? void 0 : trip.title, \"         \", /*#__PURE__*/_jsxDEV(Button, {\n            icon: \"pi pi-plus\",\n            text: true,\n            raised: true,\n            size: \"small\",\n            onClick: addEntry\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(DataView, {\n          value: journalEntries,\n          itemTemplate: entryTemplate,\n          layout: 'grid',\n          cols: 1,\n          className: \"dataView\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 1\n      }, this), selectedEntry && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex align-items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"pi pi-calendar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-semibold\",\n              children: new Date(selectedEntry.date).toLocaleDateString('en-US', {\n                day: 'numeric',\n                month: 'short',\n                year: 'numeric'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 10\n          }, this),\n          subTitle: trip.title,\n          footer: footer,\n          header: header,\n          style: {\n            width: \"80rem\"\n          },\n          children: isEditing && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Editor, {\n              value: text,\n              onTextChange: e => setText(e.htmlValue),\n              style: {\n                height: '320px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" How would you rate your day?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Rating, {\n              value: rating,\n              cancel: false,\n              onChange: e => setRating(e.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"pi pi-map-marker\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 14\n              }, this), \" Location: \", selectedEntry.location]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"pi pi-sun\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 14\n              }, this), \" Weather: \", selectedEntry.weather]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"pi pi-images\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 14\n              }, this), \" Photos:\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n              name: \"demo[]\",\n              url: '/api/upload',\n              multiple: true,\n              accept: \"image/*\",\n              maxFileSize: 1000000,\n              emptyTemplate: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"m-0\",\n                children: \"Drag and drop files to here to upload.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 120\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true) || /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: \"Your entry is being edited.\"\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n};\n_s(JournalView, \"rvdwDHbapyF6Tgz2tRnvRkPBLug=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = JournalView;\nexport default JournalView;\nvar _c;\n$RefreshReg$(_c, \"JournalView\");","map":{"version":3,"names":["React","useState","useEffect","fetchJournalEntrysByTripId","updateJournalEntry","Sidebar","Button","DataView","Editor","Card","FileUpload","Rating","useNavigate","useParams","fetchTripById","jsxDEV","_jsxDEV","Fragment","_Fragment","JournalView","_s","journalEntries","setJournalEntries","trip","setTrip","loading","setLoading","error","setError","visible","setVisible","selectedEntry","setSelectedEntry","isEditing","setIsEditing","text","setText","rating","setRating","navigate","tripId","index","then","data","sortedEntries","sort","a","b","Date","date","catch","console","saveJournalEntry","id","JSON","stringify","location","photos","map","photo","Id","Url","url","JournalEntryId","addEntry","entryTemplate","entry","className","style","backgroundColor","children","maxWidth","maxHeight","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleDateString","day","month","year","icon","onClick","header","alt","height","src","coverPhotoUrl","footer","label","severity","marginLeft","onHide","title","raised","size","value","itemTemplate","layout","cols","subTitle","width","onTextChange","e","htmlValue","cancel","onChange","weather","name","multiple","accept","maxFileSize","emptyTemplate","_c","$RefreshReg$"],"sources":["C:/Users/faigy/OneDrive/Documents/travel journal project/travel-journal client/myproject/src/components/JournalView.jsx"],"sourcesContent":["\r\n// import React, { useEffect, useState } from 'react';\r\n// import { fetchJournalEntrysByTripId, updateJournalEntry } from '../Services/JournalEntryService';\r\n// import { Sidebar } from 'primereact/sidebar';\r\n// import { Button } from 'primereact/button';\r\n// import { DataView } from 'primereact/dataview';\r\n// import { Editor } from \"primereact/editor\";\r\n// import {Card} from 'primereact/card'\r\n// import { FileUpload } from 'primereact/fileupload';\r\n// import {Rating} from 'primereact/rating'\r\n// import './style sheets/TripsView.css'\r\n// import { useNavigate,useParams } from 'react-router-dom';\r\n// import { fetchTripById } from '../Services/TripService';\r\n\r\n// const JournalView = () => {\r\n//     const [journalEntries, setJournalEntries] = useState([]);\r\n//     const [trip, setTrip] = useState(null);\r\n//     const [loading, setLoading] = useState(true);\r\n//     const [error, setError] = useState(null);\r\n//     const [selectedEntry, setSelectedEntry] = useState(null);\r\n//     const [visible, setVisible] = useState(true);\r\n//     const [text, setText] = useState(selectedEntry?.text);\r\n//     const [rating, setRating] = useState(selectedEntry?.rating);\r\n//     const navigate=useNavigate()\r\n//     const { tripId } = useParams();\r\n//     let index=1;\r\n\r\n//     useEffect(() => {\r\n//         fetchJournalEntrysByTripId(tripId)\r\n//         .then((data) => {\r\n//           const sortedEntries = data.sort((a, b) => new Date(a.date));\r\n//           setJournalEntries(sortedEntries);\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error('Error fetching entries:', error);\r\n//           setError(error);\r\n//           setLoading(false);\r\n//         });\r\n//         fetchTripById(tripId)\r\n//         .then((data) => {\r\n//           setTrip(data);\r\n//           setLoading(false);\r\n//         })\r\n//         .catch((error) => {\r\n//           console.error('Error fetching entries:', error);\r\n//           setError(error);\r\n//           setLoading(false);\r\n//         });\r\n//     }, []);\r\n\r\n//     const saveJournalEntry = () => {\r\n//       const updatedEntry = { ...selectedEntry,text };\r\n//       const journalEntryDTO = {\r\n//         id: updatedEntry.id,\r\n//         text: updatedEntry.text,\r\n//         date: updatedEntry.date,\r\n//         location: updatedEntry.location,\r\n//         tripId: updatedEntry.tripId,\r\n//         photos: updatedEntry.photos.map((photo) => ({\r\n//           Id: photo.id,\r\n//           Url: photo.url,\r\n//           JournalEntryId: photo.id,\r\n//         })),\r\n//       };\r\n//   updateJournalEntry(selectedEntry.id, JSON.stringify(journalEntryDTO));\r\n//     }\r\n//    const addEntry=()=>{\r\n//     //create and return id and then open for editing like regular\r\n//    }\r\n//     const entryTemplate = (entry) => {\r\n//         return (\r\n//           <div className=\"col-12 sm:col-6 lg:col-12  p-2 \" key={entry.id} style={{ backgroundColor:\"#ADD8E6\"}}>\r\n//             <div className=\"p-4 border-1 surface-border surface-card border-round\" style={{ maxWidth: '100rem',  maxHeight: '25rem' }}>\r\n//               <div className=\"flex flex-wrap align-items-center justify-content-between gap-2\">\r\n//                 <div className=\"flex align-items-center gap-2\">\r\n//                   <i className=\"pi pi-calendar\"></i>\r\n//                   <span className=\"font-semibold\">{new Date(entry.date).toLocaleDateString('en-US', { day: 'numeric', month: 'short', year: 'numeric' })}</span>\r\n//                 </div>\r\n//               </div>\r\n//               <div className=\"flex flex-column align-items-center gap-3 py-5\">\r\n//                 <div className=\"text-2xl font-bold\">Day {index++}</div>\r\n//               </div>\r\n//               <div className=\"flex align-items-center justify-content-center\">\r\n//                   <Button\r\n//                     icon=\"pi pi-eye \"\r\n//                     className=\"p-button-rounded\"\r\n//                     onClick={() =>{\r\n//                       setSelectedEntry(entry);\r\n//                       setVisible(false)\r\n//                       setText(entry.text)\r\n//                       }}\r\n//                   >\r\n//                   </Button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         );\r\n//       };\r\n//       const header = (\r\n//         <img alt=\"Card\" style={{height:\"10rem\"}}src={`https://localhost:44393/${trip?.coverPhotoUrl}`} />\r\n//     );\r\n//       const footer = (\r\n//         <>\r\n//             <Button label=\"Save\" icon=\"pi pi-check\" onClick={saveJournalEntry}/>\r\n//             <Button label=\"Cancel\" severity=\"secondary\" icon=\"pi pi-times\" style={{ marginLeft: '0.5em' }} />\r\n//         </>\r\n//     );\r\n\r\n//   return (\r\n// <> \r\n// <Button icon=\"pi pi-angle-right\"  onClick={() => setVisible(true)} />\r\n//     <div className=\"card flex justify-content-center\">\r\n//     <Sidebar visible={visible} onHide={() => setVisible(false)}>\r\n//         <h2>{trip?.title}         <Button icon=\"pi pi-plus\"  text raised size=\"small\" onClick={addEntry}></Button></h2>\r\n//         <br></br>\r\n//         <DataView \r\n//         value={journalEntries} \r\n//         itemTemplate={entryTemplate} \r\n//         layout={'grid'} \r\n//         cols={1} \r\n//         className=\"dataView\"\r\n//         />\r\n//     </Sidebar>\r\n//     {selectedEntry &&    \r\n//     <div className=\"card flex justify-content-center\">\r\n//         <Card \r\n//         title={<div className=\"flex align-items-center gap-2\">\r\n//                 <i className=\"pi pi-calendar\"></i>\r\n//                 <span className=\"font-semibold\">{new Date(selectedEntry.date).toLocaleDateString('en-US', { day: 'numeric', month: 'short', year: 'numeric' })}</span>\r\n//             </div>} \r\n//         subTitle={trip.title} \r\n//         footer={footer} \r\n//         header={header}  \r\n//         style={{width:\"80rem\"}}>\r\n//             <Editor value={text} onTextChange={(e) => setText(e.htmlValue)} style={{ height: '320px' }}/>\r\n//             <p> How would you rate your day?</p>\r\n//             <Rating value={rating} cancel={false} onChange={(e) => setRating(e.value)}></Rating>\r\n//             <p><i className=\"pi pi-map-marker\" /> Location: {selectedEntry.location}</p>\r\n//             <p><i className=\"pi pi-sun\" /> Weather: {selectedEntry.weather}</p>\r\n//             <p><i className=\"pi pi-images\" /> Photos:</p>\r\n//             <FileUpload name=\"demo[]\" url={'/api/upload'} multiple accept=\"image/*\" maxFileSize={1000000} emptyTemplate={<p className=\"m-0\">Drag and drop files to here to upload.</p>} />\r\n\r\n//         </Card>\r\n//     </div>}\r\n//  </div>\r\n// </>\r\n//   );\r\n// };\r\nimport React, { useState,useEffect } from 'react';\r\nimport { fetchJournalEntrysByTripId, updateJournalEntry } from '../Services/JournalEntryService';\r\nimport { Sidebar } from 'primereact/sidebar';\r\nimport { Button } from 'primereact/button';\r\nimport { DataView } from 'primereact/dataview';\r\nimport { Editor } from \"primereact/editor\";\r\nimport { Card} from 'primereact/card'\r\nimport { FileUpload } from 'primereact/fileupload';\r\nimport {Rating} from 'primereact/rating'\r\nimport './style sheets/TripsView.css'\r\nimport { useNavigate,useParams } from 'react-router-dom';\r\nimport { fetchTripById } from '../Services/TripService';\r\n\r\nconst JournalView = () => {\r\n    const [journalEntries, setJournalEntries] = useState([]);\r\n    const [trip, setTrip] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [visible, setVisible] = useState(null);\r\n    const [selectedEntry, setSelectedEntry] = useState(null);\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [text, setText] = useState('');\r\n    const [rating, setRating] = useState(0);\r\n    const navigate=useNavigate()\r\n    const { tripId } = useParams();\r\n    let index=1;\r\n\r\n    useEffect(() => {\r\n        fetchJournalEntrysByTripId(tripId)\r\n        .then((data) => {\r\n          const sortedEntries = data.sort((a, b) => new Date(a.date));\r\n          setJournalEntries(sortedEntries);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching entries:', error);\r\n          setError(error);\r\n          setLoading(false);\r\n        });\r\n        fetchTripById(tripId)\r\n        .then((data) => {\r\n          setTrip(data);\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching entries:', error);\r\n          setError(error);\r\n          setLoading(false);\r\n        });\r\n    }, []);\r\n\r\n    const saveJournalEntry = () => {\r\n      setIsEditing(false);\r\n      updateJournalEntry(selectedEntry.id, JSON.stringify({\r\n        id: selectedEntry.id,\r\n        text: text,\r\n        date: selectedEntry.date,\r\n        location: selectedEntry.location,\r\n        tripId: selectedEntry.tripId,\r\n        photos: selectedEntry.photos.map((photo) => ({\r\n          Id: photo.id,\r\n          Url: photo.url,\r\n          JournalEntryId: photo.id,\r\n        })),\r\n      }));\r\n      \r\n    };\r\n\r\n    const addEntry=()=>{\r\n      //create and return id and then open for editing like regular\r\n     }\r\n\r\n    const entryTemplate = (entry) => {\r\n      return (\r\n        <div className=\"col-12 sm:col-6 lg:col-12  p-2 \" key={entry.id} style={{ backgroundColor:\"#ADD8E6\"}}>\r\n          <div className=\"p-4 border-1 surface-border surface-card border-round\" style={{ maxWidth: '100rem',  maxHeight: '25rem' }}>\r\n            <div className=\"flex flex-wrap align-items-center justify-content-between gap-2\">\r\n              <div className=\"flex align-items-center gap-2\">\r\n                <i className=\"pi pi-calendar\"></i>\r\n                <span className=\"font-semibold\">{new Date(entry.date).toLocaleDateString('en-US', { day: 'numeric', month: 'short', year: 'numeric' })}</span>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex flex-column align-items-center gap-3 py-5\">\r\n              <div className=\"text-2xl font-bold\">Day {index++}</div>\r\n            </div>\r\n            <div className=\"flex align-items-center justify-content-center\">\r\n              <Button\r\n                icon=\"pi pi-eye \"\r\n                className=\"p-button-rounded\"\r\n                onClick={() =>{\r\n                  setSelectedEntry(entry);\r\n                  setIsEditing(true)\r\n                  setText(entry.text)\r\n                  setRating(entry.rating)\r\n                }\r\n                }\r\n              >\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\n\r\n    const header = (\r\n      <img alt=\"Card\" style={{height:\"10rem\"}}src={`https://localhost:44393/${trip?.coverPhotoUrl}`} />\r\n    );\r\n\r\n    const footer = (\r\n      <>\r\n      {isEditing && (\r\n        <Button label=\"Save\" icon=\"pi pi-check\" onClick={saveJournalEntry}/>\r\n      )}\r\n      <Button label=\"Cancel\" severity=\"secondary\" icon=\"pi pi-times\" style={{ marginLeft: '0.5em' }} />\r\n      </>\r\n    );\r\n\r\n  return (\r\n<> \r\n<Button icon=\"pi pi-angle-right\"  onClick={() => setVisible(true)} />\r\n<div className=\"card flex justify-content-center\">\r\n<Sidebar visible={visible} onHide={() => setVisible(false)}>\r\n  <h2>{trip?.title}         <Button icon=\"pi pi-plus\"  text raised size=\"small\" onClick={addEntry}></Button></h2>\r\n  <br></br>\r\n  <DataView \r\n  value={journalEntries} \r\n  itemTemplate={entryTemplate} \r\n  layout={'grid'} \r\n  cols={1} \r\n  className=\"dataView\"\r\n  />\r\n</Sidebar>\r\n{selectedEntry &&    \r\n<div className=\"card flex justify-content-center\">\r\n  <Card \r\n  title={<div className=\"flex align-items-center gap-2\">\r\n          <i className=\"pi pi-calendar\"></i>\r\n          <span className=\"font-semibold\">{new Date(selectedEntry.date).toLocaleDateString('en-US', { day: 'numeric', month: 'short', year: 'numeric' })}</span>\r\n        </div>} \r\n  subTitle={trip.title} \r\n  footer={footer} \r\n  header={header}  \r\n  style={{width:\"80rem\"}}>\r\n      {(isEditing && (\r\n        <>\r\n          <Editor value={text} onTextChange={(e) => setText(e.htmlValue)} style={{ height: '320px' }}/>\r\n          <p> How would you rate your day?</p>\r\n          <Rating value={rating} cancel={false} onChange={(e) => setRating(e.value)}></Rating>\r\n          <p><i className=\"pi pi-map-marker\" /> Location: {selectedEntry.location}</p>\r\n          <p><i className=\"pi pi-sun\" /> Weather: {selectedEntry.weather}</p>\r\n          <p><i className=\"pi pi-images\" /> Photos:</p>\r\n          <FileUpload name=\"demo[]\" url={'/api/upload'} multiple accept=\"image/*\" maxFileSize={1000000} emptyTemplate={<p className=\"m-0\">Drag and drop files to here to upload.</p>} />\r\n        </>\r\n      )) || (\r\n        <>Your entry is being edited.</>\r\n      )}\r\n </Card>\r\n</div>}\r\n</div>\r\n</>)}\r\n export default JournalView;"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}