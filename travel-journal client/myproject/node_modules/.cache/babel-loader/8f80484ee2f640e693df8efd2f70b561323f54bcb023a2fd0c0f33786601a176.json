{"ast":null,"code":"// import { useState,useEffect } from \"react\";\n\n// const Store = ()=>{\n\n//     const [books, setBooks] = useState([]);\n//     // const [a, setA] = useState(\"\");\n//     // const [b, setB] = useState(\"\");\n//     // const [c, setC] = useState(0);\n//     // const [d, setD] = useState(\"\");\n//     // const [p, setP] = useState(\"\");\n//     async function showBook() {\n//         try {\n//           const response = await fetch(\"http://localhost:7002/api/books\")\n//           const data = await response.json();\n//           setBooks(data)\n//           console.log(books);\n//         }\n//         catch (error) {\n//           console.log(\"failed to fetch\");\n//         }\n//       }\n//       useEffect(() => { showBook() }, [])\n\n//     const deleteBook=(b)=>{\n\n//         var myHeaders = new Headers();\n//         myHeaders.append(\"Content-Type\", \"application/json\");\n\n//         var raw = JSON.stringify({\n//           code: b._id\n//         });\n\n//         var requestOptions = {\n//           method: 'DELETE',\n//           headers: myHeaders,\n//           body: raw,\n//           redirect: 'follow'\n//         };\n\n//         fetch(\"http://localhost:7002/api/books\", requestOptions)\n//           .then(response => response.text())\n//           .then(result => {alert(result)\n//           setBooks(prevCartItems => prevCartItems.filter(item => item._id !== b._id));})\n//           .catch(error => console.log('error', error));\n//     }\n//     const updateBook=(i)=>{\n\n//       document.getElementById(\"dialog\").showModal();\n\n//     }\n//     const update=async (i)=>{\n//         var myHeaders = new Headers();\n//         myHeaders.append(\"Content-Type\", \"application/json\");\n\n//         var raw = JSON.stringify({\n//           name: i.name,\n//           code: i.code,\n//           price: i.price,\n//           author:i.author,\n//           image: i.image\n//         });\n\n//         var requestOptions = {\n//           method: 'PUT',\n//           headers: myHeaders,\n//           body: raw,\n//           redirect: 'follow'\n//         };\n//         fetch(\"http://localhost:7002/api/books\", requestOptions)\n//         .then(response => response.text())\n//         .then(result => {\n//           console.log(result);\n//           setBooks(prevBooks => {\n//             const updatedBooks = [...prevBooks];\n//             const updatedIndex = updatedBooks.findIndex(book => book.code === i.code);\n//             updatedBooks[updatedIndex] = {\n//               ...updatedBooks[updatedIndex],\n//               name: i.name,\n//               code: i.code,\n//               price: i.price,\n//               author:i.author,\n//               image: i.image\n//             };\n//             return updatedBooks;\n//           });\n//         })\n//           .catch(error => console.log('error', error));\n//           document.getElementById(\"dialog\").close()\n\n//         }  \n\n//           const cancel=()=>{\n//             document.getElementById(\"dialog\").close()\n//           }\n\n//     return (\n//         <>\n//         <button onClick={()=>updateBook({})}>Add New Book</button>\n\n//            {books && books.map((i,index) => {\n//             return <div className='border' key={i._id}>\n//                     <img src={i.image} style={{ heignt: \"150px\", width: \"200px\", fontFamily: \"initial\" }}></img>\n//                    <div>{i.name + \" | \" + i.price + \"₪\"}</div>\n//                    <button key={index} onClick={()=>updateBook(i)}>Edit</button>\n\n//                    <dialog id=\"dialog\">\n//                     <h1>Add/Edit-Book</h1>\n//                     <input defaultValue={i.name} onBlur={e=>i.name=e.target.value}></input>\n//                     <br></br>\n//                     <input value={i.code}></input>\n//                     <br></br>\n//                     <input defaultValue={i.price}   onBlur={e=>i.price=e.target.value}></input>\n//                     <br></br>\n//                     <textarea defaultValue={i.author}  onBlur={e=>e=>i.author=e.target.value}></textarea>\n//                     <br></br>\n//                     <input defaultValue={i.image} onBlur={e=>e=>i.image=e.target.value}></input>\n//                     <br></br>\n//                     <img src={i.image} style={{ heignt: \"150px\", width: \"200px\", fontFamily: \"initial\" }}></img>\n//                     <br></br>\n//                     <button onClick={()=>update(i)}>save</button>\n//                     <button onClick={()=>cancel()}>cancel</button>\n//                    </dialog>\n//                    <button onClick={()=>deleteBook(i)}>Remove</button>        \n//             </div>})} \n\n//         </>);\n\n// }\n// export default Store;","map":{"version":3,"names":[],"sources":["E:/react/myproject/src/pages/Store/Store.js"],"sourcesContent":["// import { useState,useEffect } from \"react\";\r\n\r\n// const Store = ()=>{\r\n\r\n//     const [books, setBooks] = useState([]);\r\n//     // const [a, setA] = useState(\"\");\r\n//     // const [b, setB] = useState(\"\");\r\n//     // const [c, setC] = useState(0);\r\n//     // const [d, setD] = useState(\"\");\r\n//     // const [p, setP] = useState(\"\");\r\n//     async function showBook() {\r\n//         try {\r\n//           const response = await fetch(\"http://localhost:7002/api/books\")\r\n//           const data = await response.json();\r\n//           setBooks(data)\r\n//           console.log(books);\r\n//         }\r\n//         catch (error) {\r\n//           console.log(\"failed to fetch\");\r\n//         }\r\n//       }\r\n//       useEffect(() => { showBook() }, [])\r\n\r\n\r\n//     const deleteBook=(b)=>{\r\n\r\n//         var myHeaders = new Headers();\r\n//         myHeaders.append(\"Content-Type\", \"application/json\");\r\n        \r\n//         var raw = JSON.stringify({\r\n//           code: b._id\r\n//         });\r\n        \r\n//         var requestOptions = {\r\n//           method: 'DELETE',\r\n//           headers: myHeaders,\r\n//           body: raw,\r\n//           redirect: 'follow'\r\n//         };\r\n        \r\n//         fetch(\"http://localhost:7002/api/books\", requestOptions)\r\n//           .then(response => response.text())\r\n//           .then(result => {alert(result)\r\n//           setBooks(prevCartItems => prevCartItems.filter(item => item._id !== b._id));})\r\n//           .catch(error => console.log('error', error));\r\n//     }\r\n//     const updateBook=(i)=>{\r\n\r\n//       document.getElementById(\"dialog\").showModal();\r\n\r\n\r\n\r\n\r\n//     }\r\n//     const update=async (i)=>{\r\n//         var myHeaders = new Headers();\r\n//         myHeaders.append(\"Content-Type\", \"application/json\");\r\n        \r\n//         var raw = JSON.stringify({\r\n//           name: i.name,\r\n//           code: i.code,\r\n//           price: i.price,\r\n//           author:i.author,\r\n//           image: i.image\r\n//         });\r\n    \r\n//         var requestOptions = {\r\n//           method: 'PUT',\r\n//           headers: myHeaders,\r\n//           body: raw,\r\n//           redirect: 'follow'\r\n//         };\r\n//         fetch(\"http://localhost:7002/api/books\", requestOptions)\r\n//         .then(response => response.text())\r\n//         .then(result => {\r\n//           console.log(result);\r\n//           setBooks(prevBooks => {\r\n//             const updatedBooks = [...prevBooks];\r\n//             const updatedIndex = updatedBooks.findIndex(book => book.code === i.code);\r\n//             updatedBooks[updatedIndex] = {\r\n//               ...updatedBooks[updatedIndex],\r\n//               name: i.name,\r\n//               code: i.code,\r\n//               price: i.price,\r\n//               author:i.author,\r\n//               image: i.image\r\n//             };\r\n//             return updatedBooks;\r\n//           });\r\n//         })\r\n//           .catch(error => console.log('error', error));\r\n//           document.getElementById(\"dialog\").close()\r\n          \r\n//         }  \r\n\r\n//           const cancel=()=>{\r\n//             document.getElementById(\"dialog\").close()\r\n//           }\r\n\r\n   \r\n//     return (\r\n//         <>\r\n//         <button onClick={()=>updateBook({})}>Add New Book</button>\r\n        \r\n//            {books && books.map((i,index) => {\r\n//             return <div className='border' key={i._id}>\r\n//                     <img src={i.image} style={{ heignt: \"150px\", width: \"200px\", fontFamily: \"initial\" }}></img>\r\n//                    <div>{i.name + \" | \" + i.price + \"₪\"}</div>\r\n//                    <button key={index} onClick={()=>updateBook(i)}>Edit</button>\r\n\r\n//                    <dialog id=\"dialog\">\r\n//                     <h1>Add/Edit-Book</h1>\r\n//                     <input defaultValue={i.name} onBlur={e=>i.name=e.target.value}></input>\r\n//                     <br></br>\r\n//                     <input value={i.code}></input>\r\n//                     <br></br>\r\n//                     <input defaultValue={i.price}   onBlur={e=>i.price=e.target.value}></input>\r\n//                     <br></br>\r\n//                     <textarea defaultValue={i.author}  onBlur={e=>e=>i.author=e.target.value}></textarea>\r\n//                     <br></br>\r\n//                     <input defaultValue={i.image} onBlur={e=>e=>i.image=e.target.value}></input>\r\n//                     <br></br>\r\n//                     <img src={i.image} style={{ heignt: \"150px\", width: \"200px\", fontFamily: \"initial\" }}></img>\r\n//                     <br></br>\r\n//                     <button onClick={()=>update(i)}>save</button>\r\n//                     <button onClick={()=>cancel()}>cancel</button>\r\n//                    </dialog>\r\n//                    <button onClick={()=>deleteBook(i)}>Remove</button>        \r\n//             </div>})} \r\n           \r\n//         </>);\r\n    \r\n\r\n// }\r\n// export default Store;"],"mappings":"AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}