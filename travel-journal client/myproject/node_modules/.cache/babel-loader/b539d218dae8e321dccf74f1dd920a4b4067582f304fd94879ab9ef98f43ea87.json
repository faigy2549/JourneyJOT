{"ast":null,"code":"export const fetchJournalEntrysByTripId = async tripId => {\n  try {\n    const response = await fetch('https://localhost:44393/api/JournalEntry/tripId/' + tripId, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors'\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  } catch (error) {\n    throw new Error('Error fetching data:', error);\n  }\n};\nexport const updateJournalEntry = async rntryId => {\n  try {\n    const response = await fetch('https://localhost:44393/api/JournalEntry/tripId/' + tripId, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors'\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  } catch (error) {\n    throw new Error('Error fetching data:', error);\n  }\n};","map":{"version":3,"names":["fetchJournalEntrysByTripId","tripId","response","fetch","method","headers","mode","ok","Error","json","error","updateJournalEntry","rntryId"],"sources":["C:/Users/faigy/OneDrive/Documents/travel journal project/travel-journal client/myproject/src/Services/JournalEntryService.js"],"sourcesContent":["\r\nexport const fetchJournalEntrysByTripId = async (tripId) => {\r\n    try {\r\n      const response = await fetch('https://localhost:44393/api/JournalEntry/tripId/'+tripId, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        mode: 'cors', \r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n  \r\n      return response.json();\r\n    } catch (error) {\r\n      throw new Error('Error fetching data:', error);\r\n    }\r\n  };\r\n  \r\nexport const updateJournalEntry = async (rntryId) => {\r\n    try {\r\n      const response = await fetch('https://localhost:44393/api/JournalEntry/tripId/'+tripId, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        mode: 'cors', \r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n  \r\n      return response.json();\r\n    } catch (error) {\r\n      throw new Error('Error fetching data:', error);\r\n    }\r\n  };"],"mappings":"AACA,OAAO,MAAMA,0BAA0B,GAAG,MAAOC,MAAM,IAAK;EACxD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kDAAkD,GAACF,MAAM,EAAE;MACtFG,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAE;IACR,CAAC,CAAC;IAEF,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IAEA,OAAON,QAAQ,CAACO,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIF,KAAK,CAAC,sBAAsB,EAAEE,KAAK,CAAC;EAChD;AACF,CAAC;AAEH,OAAO,MAAMC,kBAAkB,GAAG,MAAOC,OAAO,IAAK;EACjD,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,kDAAkD,GAACF,MAAM,EAAE;MACtFG,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAE;IACR,CAAC,CAAC;IAEF,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAChD;IAEA,OAAON,QAAQ,CAACO,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIF,KAAK,CAAC,sBAAsB,EAAEE,KAAK,CAAC;EAChD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}