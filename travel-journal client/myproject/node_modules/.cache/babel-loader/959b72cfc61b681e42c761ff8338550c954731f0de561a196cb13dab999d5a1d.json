{"ast":null,"code":"const loginService = user => {\n  debugger;\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  var raw = JSON.stringify({\n    \"userName\": user.userName,\n    \"password\": user.password\n  });\n  var requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n  return new Promise((resolve, reject) => {\n    fetch(\"http://localhost:7002/api/auths/login\", requestOptions).then(response => {\n      if (!response.ok) {\n        reject({\n          loginStatus: \"unknown\"\n        });\n      }\n      return;\n    }).then(result => {\n      resolve({\n        loginStatus: \"ok\",\n        data: {\n          id: user.password,\n          name: user.userName,\n          userToken: result\n        }\n      });\n    }).catch(error => {});\n  });\n};\nconst registerService = () => {\n  // TODO: here call server by fetch\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  var raw = JSON.stringify({\n    \"name\": \"chfa\",\n    \"userName\": \"fc\",\n    \"password\": \"ffcc\"\n  });\n  var requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n  fetch(\"http://localhost:7002/api/auths/register\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\n  console.log(\"registered!\");\n};\nexport { loginService, registerService };","map":{"version":3,"names":["loginService","user","myHeaders","Headers","append","raw","JSON","stringify","userName","password","requestOptions","method","headers","body","redirect","Promise","resolve","reject","fetch","then","response","ok","loginStatus","result","data","id","name","userToken","catch","error","registerService","text","console","log"],"sources":["E:/project/myproject/src/services.js"],"sourcesContent":["\r\nconst loginService = (user) => {\r\n  debugger\r\n  var myHeaders = new Headers();\r\n  myHeaders.append(\"Content-Type\", \"application/json\");\r\n  \r\n  var raw = JSON.stringify({\r\n    \"userName\": user.userName,\r\n    \"password\": user.password\r\n  });\r\n  \r\n  var requestOptions = {\r\n    method: 'POST',\r\n    headers: myHeaders,\r\n    body: raw,\r\n    redirect: 'follow'\r\n  };\r\n  \r\n  return new Promise((resolve, reject) => {\r\n    fetch(\"http://localhost:7002/api/auths/login\", requestOptions)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          reject({\r\n            loginStatus: \"unknown\"\r\n          });\r\n        }\r\n        return;\r\n      })\r\n      .then(result => {\r\n        resolve({\r\n          loginStatus: \"ok\",\r\n          data: { id: user.password, name: user.userName, userToken: result },\r\n        });\r\n      })\r\n      .catch(error => {\r\n\r\n      });\r\n  });\r\n};\r\n\r\n\r\nconst registerService = () => {\r\n  // TODO: here call server by fetch\r\n  var myHeaders = new Headers();\r\nmyHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\nvar raw = JSON.stringify({\r\n  \"name\": \"chfa\",\r\n  \"userName\": \"fc\",\r\n  \"password\": \"ffcc\"\r\n});\r\n\r\nvar requestOptions = {\r\n  method: 'POST',\r\n  headers: myHeaders,\r\n  body: raw,\r\n  redirect: 'follow'\r\n};\r\n\r\nfetch(\"http://localhost:7002/api/auths/register\", requestOptions)\r\n  .then(response => response.text())\r\n  .then(result => console.log(result))\r\n  .catch(error => console.log('error', error));\r\n  console.log(\"registered!\");\r\n};\r\n\r\nexport { loginService, registerService };\r\n"],"mappings":"AACA,MAAMA,YAAY,GAAIC,IAAI,IAAK;EAC7B;EACA,IAAIC,SAAS,GAAG,IAAIC,OAAO,CAAC,CAAC;EAC7BD,SAAS,CAACE,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC;EAEpD,IAAIC,GAAG,GAAGC,IAAI,CAACC,SAAS,CAAC;IACvB,UAAU,EAAEN,IAAI,CAACO,QAAQ;IACzB,UAAU,EAAEP,IAAI,CAACQ;EACnB,CAAC,CAAC;EAEF,IAAIC,cAAc,GAAG;IACnBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAEV,SAAS;IAClBW,IAAI,EAAER,GAAG;IACTS,QAAQ,EAAE;EACZ,CAAC;EAED,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCC,KAAK,CAAC,uCAAuC,EAAER,cAAc,CAAC,CAC3DS,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChBJ,MAAM,CAAC;UACLK,WAAW,EAAE;QACf,CAAC,CAAC;MACJ;MACA;IACF,CAAC,CAAC,CACDH,IAAI,CAACI,MAAM,IAAI;MACdP,OAAO,CAAC;QACNM,WAAW,EAAE,IAAI;QACjBE,IAAI,EAAE;UAAEC,EAAE,EAAExB,IAAI,CAACQ,QAAQ;UAAEiB,IAAI,EAAEzB,IAAI,CAACO,QAAQ;UAAEmB,SAAS,EAAEJ;QAAO;MACpE,CAAC,CAAC;IACJ,CAAC,CAAC,CACDK,KAAK,CAACC,KAAK,IAAI,CAEhB,CAAC,CAAC;EACN,CAAC,CAAC;AACJ,CAAC;AAGD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC5B;EACA,IAAI5B,SAAS,GAAG,IAAIC,OAAO,CAAC,CAAC;EAC/BD,SAAS,CAACE,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC;EAEpD,IAAIC,GAAG,GAAGC,IAAI,CAACC,SAAS,CAAC;IACvB,MAAM,EAAE,MAAM;IACd,UAAU,EAAE,IAAI;IAChB,UAAU,EAAE;EACd,CAAC,CAAC;EAEF,IAAIG,cAAc,GAAG;IACnBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAEV,SAAS;IAClBW,IAAI,EAAER,GAAG;IACTS,QAAQ,EAAE;EACZ,CAAC;EAEDI,KAAK,CAAC,0CAA0C,EAAER,cAAc,CAAC,CAC9DS,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACW,IAAI,CAAC,CAAC,CAAC,CACjCZ,IAAI,CAACI,MAAM,IAAIS,OAAO,CAACC,GAAG,CAACV,MAAM,CAAC,CAAC,CACnCK,KAAK,CAACC,KAAK,IAAIG,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEJ,KAAK,CAAC,CAAC;EAC5CG,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;AAC5B,CAAC;AAED,SAASjC,YAAY,EAAE8B,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}