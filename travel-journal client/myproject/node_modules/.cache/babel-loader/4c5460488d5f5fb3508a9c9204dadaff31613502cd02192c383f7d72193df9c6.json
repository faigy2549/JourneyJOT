{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\myproject\\\\src\\\\pages\\\\Store\\\\Store.js\",\n  _s = $RefreshSig$();\n// import { useState, useEffect } from \"react\";\n// import \"./Store.css\"\n// const Store = () => {\n//   const [books, setBooks] = useState([]);\n//   const [selectedBook, setSelectedBook] = useState(null);\n\n//   async function showBook() {\n//     try {\n//       const response = await fetch(\"http://localhost:7002/api/books\");\n//       const data = await response.json();\n//       setBooks(data);\n//     } catch (error) {\n//       console.log(\"failed to fetch\");\n//     }\n//   }\n\n//   useEffect(() => {\n//     showBook();\n//   }, []);\n\n//   const deleteBook = (book) => {\n//     var myHeaders = new Headers();\n//     myHeaders.append(\"Content-Type\", \"application/json\");\n\n//     var raw = JSON.stringify({\n//       code: book._id\n//     });\n\n//     var requestOptions = {\n//       method: \"DELETE\",\n//       headers: myHeaders,\n//       body: raw,\n//       redirect: \"follow\"\n//     };\n\n//     fetch(\"http://localhost:7002/api/books\", requestOptions)\n//       .then((response) => response.text())\n//       .then((result) => {\n//         alert(result);\n//         setBooks((prevCartItems) =>\n//           prevCartItems.filter((item) => item._id !== book._id)\n//         );\n//       })\n//       .catch((error) => console.log(\"error\", error));\n//   };\n\n//   const updateBook = (book) => {\n//     setSelectedBook({...book});\n//     document.getElementById(\"dialog\").showModal();\n//   };\n\n//   useEffect(() => {\n//     if (selectedBook) {\n//       document.getElementById(\"name\").value = selectedBook.name;\n//       document.getElementById(\"code\").value = selectedBook.code;\n//       document.getElementById(\"price\").value = selectedBook.price;\n//       document.getElementById(\"author\").value = selectedBook.author;\n//       document.getElementById(\"image\").value = selectedBook.image;\n//     }\n//   }, [selectedBook]);\n//   const update = async (book) => {\n//     var myHeaders = new Headers();\n//     myHeaders.append(\"Content-Type\", \"application/json\");\n\n//     var raw = JSON.stringify({\n//       name: book.name,\n//       code: book.code,\n//       price: book.price,\n//       author: book.author,\n//       image: book.image\n//     });\n\n//     var requestOptions = {\n//       method: \"PUT\",\n//       headers: myHeaders,\n//       body: raw,\n//       redirect: \"follow\"\n//     };\n\n//     fetch(\"http://localhost:7002/api/books\", requestOptions)\n//       .then((response) => response.text())\n//       .then((result) => {\n//         console.log(result);\n//         setBooks((prevBooks) => {\n//           const updatedBooks = [...prevBooks];\n//           const updatedIndex = updatedBooks.findIndex(\n//             (book) => book.code === selectedBook.code\n//           );\n//           updatedBooks[updatedIndex] = {\n//             ...updatedBooks[updatedIndex],\n//             name: book.name,\n//             code: book.code,\n//             price: book.price,\n//             author: book.author,\n//             image: book.image\n//           };\n//           return updatedBooks;\n//         });\n//       })\n//       .catch((error) => console.log(\"error\", error));\n\n//     document.getElementById(\"dialog\").close();\n//   };\n\n//   const cancel = () => {\n//     document.getElementById(\"dialog\").close();\n//   };\n\n// const addNewBook=()=>{\n\n//   var myHeaders = new Headers();\n// myHeaders.append(\"Content-Type\", \"application/json\");\n\n// var raw = JSON.stringify({\n//   \"name\":document.getElementById(\"name\").value ,\n//   \"code\":document.getElementById(\"code\").value ,\n//   \"price\":document.getElementById(\"price\").value ,\n//   \"author\":document.getElementById(\"author\").value,\n//   \"image\":document.getElementById(\"image\").value \n// });\n\n// var requestOptions = {\n//   method: 'POST',\n//   headers: myHeaders,\n//   body: raw,\n//   redirect: 'follow'\n// };\n\n// fetch(\"http://localhost:7002/api/books\", requestOptions)\n//   .then(response => response.text())\n//   .then((result) => {\n//     alert(result);\n\n//   })\n//   .catch(error => console.log('error', error));\n\n//   document.getElementById(\"dialog\").close();\n\n// }\n//   return (\n//     <>\n//      <img src=\"w.jpg\" style={{ heignt: \"180px\", width: \"180px\", fontFamily: \"initial\" }}></img>\n//       <button onClick={() => updateBook({})}>Add New Book</button>\n\n//       {books &&\n//         books.map((book, index) => {\n//           return (\n//             <div className=\"border\" key={book._id}>\n//               <img\n//                 src={book.image}\n//                 style={{ heignt: \"150px\", width: \"200px\", fontFamily: \"initial\" }}\n//               ></img>\n//               <div>{book.name + \" | \" + book.price + \"â‚ª\"}</div>\n//               <button key={index} onClick={() => updateBook(book)}>\n//                 Edit\n//               </button>\n\n//               <dialog id=\"dialog\">\n//                 <h1>Add/Edit-Book</h1>\n//               name\n//               <br></br>\n//                 <input id=\"name\" placeholder=\"name\" defaultValue={selectedBook ? selectedBook.name : \"\"} onBlur={(e) =>\n//                     setSelectedBook({\n//                       ...selectedBook,\n//                       name: e.target.value\n//                     })}></input>\n\n//                 <br></br>\n//                 code\n//                 <br></br>\n//                 <input id=\"code\" placeholder=\"code\"\n\n//                   defaultValue={selectedBook ? selectedBook.code : \"\"}\n//                   onBlur={(e) =>\n//                     setSelectedBook({\n//                       ...selectedBook,\n//                       code: e.target.value\n//                     })\n//                   }\n//                 ></input>\n//                 <br></br>\n//                 price\n//                 <br></br>\n//                 <input id=\"price\" placeholder=\"price\"\n//                   defaultValue={selectedBook ? selectedBook.price : \"\"}\n//                   onBlur={(e) =>\n//                     setSelectedBook({\n//                       ...selectedBook,\n//                       price: e.target.value\n//                     })\n//                   }\n//                 ></input>\n//                 <br></br>\n//                 author\n//                 <br></br>\n//                 <textarea id=\"author\" placeholder=\"author\"\n//                   defaultValue={selectedBook ? selectedBook.author : \"\"}\n//                   onBlur={(e) =>\n//                     setSelectedBook({\n//                       ...selectedBook,\n//                       author: e.target.value\n//                     })\n//                   }\n//                 ></textarea>\n//                 <br></br>\n//                 image-url\n//                 <br></br>\n//                 <input id=\"image\" placeholder=\"image url\"\n//                   defaultValue={selectedBook ? selectedBook.image : \"\"}\n//                   onBlur={(e) =>\n//                     setSelectedBook({\n//                       ...selectedBook,\n//                       image: e.target.value\n//                     })\n//                   }\n//                 ></input>\n//                 <br></br>\n//                 <img\n//                   src={selectedBook ? selectedBook.image : \"\"}\n//                   style={{ heignt: \"150px\", width: \"200px\", fontFamily: \"initial\" }}\n//                 ></img>\n//                 <br></br>\n//                 <button onClick={() => update(selectedBook)}>edit</button>\n//                 <button onClick={() =>addNewBook()}>create</button>\n//                 <button onClick={cancel}>cancel</button>\n//               </dialog>\n//               <button onClick={() => deleteBook(book)}>Remove</button>\n//             </div>\n//           );\n//         })}\n//     </>\n//   );\n// };\n\n// export default Store;\n// import { useState, useEffect } from \"react\";\n// import \"./Store.css\";\n\n// const Store = () => {\n//   const [books, setBooks] = useState([]);\n//   const [selectedBook, setSelectedBook] = useState(null);\n\n//   async function showBook() {\n//     try {\n//       const response = await fetch(\"http://localhost:7002/api/books\");\n//       const data = await response.json();\n//       setBooks(data);\n//     } catch (error) {\n//       console.log(\"failed to fetch\");\n//     }\n//   }\n\n//   useEffect(() => {\n//     showBook();\n//   }, []);\n\n//   const deleteBook = (book) => {\n//     var myHeaders = new Headers();\n//     myHeaders.append(\"Content-Type\", \"application/json\");\n\n//     var raw = JSON.stringify({\n//       code: book._id\n//     });\n\n//     var requestOptions = {\n//       method: \"DELETE\",\n//       headers: myHeaders,\n//       body: raw,\n//       redirect: \"follow\"\n//     };\n\n//     fetch(\"http://localhost:7002/api/books\", requestOptions)\n//       .then((response) => response.text())\n//       .then((result) => {\n//         alert(result);\n//         setBooks((prevCartItems) =>\n//           prevCartItems.filter((item) => item._id !== book._id)\n//         );\n//       })\n//       .catch((error) => console.log(\"error\", error));\n//   };\n\n//   const updateBook = (book) => {\n//     setSelectedBook({ ...book });\n//     document.getElementById(\"dialog\").showModal();\n//   };\n\n//   useEffect(() => {\n//     if (selectedBook) {\n//       document.getElementById(\"name\").value = selectedBook.name;\n//       document.getElementById(\"code\").value = selectedBook.code;\n//       document.getElementById(\"price\").value = selectedBook.price;\n//       document.getElementById(\"author\").value = selectedBook.author;\n//       document.getElementById(\"image\").value = selectedBook.image;\n//     }\n//   }, [selectedBook]);\n\n//   const update = async (book) => {\n//     var myHeaders = new Headers();\n//     myHeaders.append(\"Content-Type\", \"application/json\");\n\n//     var raw = JSON.stringify({\n//       name: book.name,\n//       code: book.code,\n//       price: book.price,\n//       author: book.author,\n//       image: book.image\n//     });\n\n//     var requestOptions = {\n//       method: \"PUT\",\n//       headers: myHeaders,\n//       body: raw,\n//       redirect: \"follow\"\n//     };\n\n//     fetch(\"http://localhost:7002/api/books\", requestOptions)\n//       .then((response) => response.text())\n//       .then((result) => {\n//         console.log(result);\n//         setBooks((prevBooks) => {\n//           const updatedBooks = [...prevBooks];\n//           const updatedIndex = updatedBooks.findIndex(\n//             (book) => book.code === selectedBook.code\n//           );\n//           updatedBooks[updatedIndex] = {\n//             ...updatedBooks[updatedIndex],\n//             name: book.name,\n//             code: book.code,\n//             price: book.price,\n//             author: book.author,\n//             image: book.image\n//           };\n//           return updatedBooks;\n//         });\n//       })\n//       .catch((error) => console.log(\"error\", error));\n\n//     document.getElementById(\"dialog\").close();\n//   };\n\n//   const cancel = () => {\n//     document.getElementById(\"dialog\").close();\n//   };\n\n//   const addNewBook = () => {\n//     var myHeaders = new Headers();\n//     myHeaders.append(\"Content-Type\", \"application/json\");\n\n//     var raw = JSON.stringify({\n//       name: document.getElementById(\"name\").value,\n//       code: document.getElementById(\"code\").value,\n//       price: document.getElementById(\"price\").value,\n//       author: document.getElementById(\"author\").value,\n//       image: document.getElementById(\"image\").value\n//     });\n\n//     var requestOptions = {\n//       method: \"POST\",\n//       headers: myHeaders,\n//       body: raw,\n//       redirect: \"follow\"\n//     };\n\n//     fetch(\"http://localhost:7002/api/books\", requestOptions)\n//       .then((response) => response.text())\n//       .then((result) => {\n//         alert(result);\n//       })\n//       .catch((error) => console.log(\"error\", error));\n\n//     document.getElementById(\"dialog\").close();\n//   };\n\n//   return (\n//     <>\n//       <div className=\"container\">\n//         <img src=\"w.jpg\" className=\"image\" />\n//         <button onClick={() => updateBook({})}>Add New Book</button>\n\n//         {books &&\n//           books.map((book, index) => (\n//             <div className=\"book-wrapper\" key={book._id}>\n//               <img src={book.image} />\n//               <div className=\"book-info\">\n//                 {book.name} | {book.price}â‚ª\n//               </div>\n//               <div className=\"button-group\">\n//                 <button onClick={() => updateBook(book)}>Edit</button>\n//                 <button onClick={() => deleteBook(book)}>Remove</button>\n//               </div>\n//             </div>\n//           ))}\n//       </div>\n\n//       <dialog id=\"dialog\" className=\"dialog\">\n//         <h1>Add/Edit Book</h1>\n//         <label >Name</label>\n//         <input\n//           id=\"name\"\n//           placeholder=\"Name\"\n//           defaultValue={selectedBook ? selectedBook.name : \"\"}\n//           onBlur={(e) =>\n//             setSelectedBook({ ...selectedBook, name: e.target.value })\n//           }\n//         />\n\n//         <label>Code</label>\n//         <input\n//           id=\"code\"\n//           placeholder=\"Code\"\n//           defaultValue={selectedBook ? selectedBook.code : \"\"}\n//           onBlur={(e) =>\n//             setSelectedBook({ ...selectedBook, code: e.target.value })\n//           }\n//         />\n\n//         <label >Price</label>\n//         <input\n//           id=\"price\"\n//           placeholder=\"Price\"\n//           defaultValue={selectedBook ? selectedBook.price : \"\"}\n//           onBlur={(e) =>\n//             setSelectedBook({ ...selectedBook, price: e.target.value })\n//           }\n//         />\n\n//         <label >Author</label>\n//         <textarea\n//           id=\"author\"\n//           placeholder=\"Author\"\n//           defaultValue={selectedBook ? selectedBook.author : \"\"}\n//           onBlur={(e) =>\n//             setSelectedBook({ ...selectedBook, author: e.target.value })\n//           }\n//         />\n\n//         <label>Image URL</label>\n//         <input\n//           id=\"image\"\n//           placeholder=\"Image URL\"\n//           defaultValue={selectedBook ? selectedBook.image : \"\"}\n//           onBlur={(e) =>\n//             setSelectedBook({ ...selectedBook, image: e.target.value })\n//           }\n//         />\n\n//         <img\n//           src={selectedBook ? selectedBook.image : \"\"}\n//           alt={selectedBook ? selectedBook.name : \"\"}\n//         />\n\n//         <div className=\"button-group\">\n//           <button onClick={() => update(selectedBook)}>Edit</button>\n//           <button onClick={addNewBook}>Create</button>\n//           <button onClick={cancel}>Cancel</button>\n//         </div>\n//       </dialog>\n//     </>\n//   );\n// };\n\n// export default Store;\nimport { useState, useEffect } from \"react\";\nimport \"./store.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Store = () => {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [selectedBook, setSelectedBook] = useState(null);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  async function showBook() {\n    try {\n      const response = await fetch(\"http://localhost:7002/api/books\");\n      const data = await response.json();\n      setBooks(data);\n    } catch (error) {\n      console.log(\"failed to fetch\");\n    }\n  }\n  useEffect(() => {\n    showBook();\n  }, []);\n  const deleteBook = book => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    var raw = JSON.stringify({\n      code: book._id\n    });\n    var requestOptions = {\n      method: \"DELETE\",\n      headers: myHeaders,\n      body: raw,\n      redirect: \"follow\"\n    };\n    fetch(\"http://localhost:7002/api/books\", requestOptions).then(response => response.text()).then(result => {\n      alert(result);\n      setBooks(prevCartItems => prevCartItems.filter(item => item._id !== book._id));\n    }).catch(error => console.log(\"error\", error));\n  };\n  const updateBook = book => {\n    setSelectedBook({\n      ...book\n    });\n    setIsDialogOpen(true);\n  };\n  useEffect(() => {\n    if (selectedBook) {\n      document.getElementById(\"name\").value = selectedBook.name;\n      document.getElementById(\"code\").value = selectedBook.code;\n      document.getElementById(\"price\").value = selectedBook.price;\n      document.getElementById(\"author\").value = selectedBook.author;\n      document.getElementById(\"image\").value = selectedBook.image;\n    }\n  }, [selectedBook]);\n  const update = async book => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    var raw = JSON.stringify({\n      name: book.name,\n      code: book.code,\n      price: book.price,\n      author: book.author,\n      image: book.image\n    });\n    var requestOptions = {\n      method: \"PUT\",\n      headers: myHeaders,\n      body: raw,\n      redirect: \"follow\"\n    };\n    fetch(\"http://localhost:7002/api/books\", requestOptions).then(response => response.text()).then(result => {\n      console.log(result);\n      setBooks(prevBooks => {\n        const updatedBooks = [...prevBooks];\n        const updatedIndex = updatedBooks.findIndex(book => book.code === selectedBook.code);\n        updatedBooks[updatedIndex] = {\n          ...updatedBooks[updatedIndex],\n          name: book.name,\n          code: book.code,\n          price: book.price,\n          author: book.author,\n          image: book.image\n        };\n        return updatedBooks;\n      });\n    }).catch(error => console.log(\"error\", error));\n    setIsDialogOpen(false);\n  };\n  const cancel = () => {\n    setIsDialogOpen(false);\n  };\n  const addNewBook = () => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    var raw = JSON.stringify({\n      name: document.getElementById(\"name\").value,\n      code: document.getElementById(\"code\").value,\n      price: document.getElementById(\"price\").value,\n      author: document.getElementById(\"author\").value,\n      image: document.getElementById(\"image\").value\n    });\n    var requestOptions = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: raw,\n      redirect: \"follow\"\n    };\n    fetch(\"http://localhost:7002/api/books\", requestOptions).then(response => response.text()).then(result => {\n      alert(result);\n    }).catch(error => console.log(\"error\", error));\n    setIsDialogOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"w.jpg\",\n        className: \"image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 608,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateBook({}),\n        children: \"Add New Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 9\n      }, this), books && books.map((book, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: book.image,\n          alt: book.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"book-info\",\n          children: [book.name, \" | \", book.price, \"\\u20AA\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => updateBook(book),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteBook(book),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 15\n        }, this)]\n      }, book._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 7\n    }, this), isDialogOpen && /*#__PURE__*/_jsxDEV(\"dialog\", {\n      id: \"dialog\",\n      className: \"dialog\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add/Edit Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"name\",\n        placeholder: \"Name\",\n        defaultValue: selectedBook ? selectedBook.name : \"\",\n        onBlur: e => setSelectedBook({\n          ...selectedBook,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"code\",\n        children: \"Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"code\",\n        placeholder: \"Code\",\n        defaultValue: selectedBook ? selectedBook.code : \"\",\n        onBlur: e => setSelectedBook({\n          ...selectedBook,\n          code: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: \"Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"price\",\n        placeholder: \"Price\",\n        defaultValue: selectedBook ? selectedBook.price : \"\",\n        onBlur: e => setSelectedBook({\n          ...selectedBook,\n          price: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"author\",\n        children: \"Author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"author\",\n        placeholder: \"Author\",\n        defaultValue: selectedBook ? selectedBook.author : \"\",\n        onBlur: e => setSelectedBook({\n          ...selectedBook,\n          author: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image\",\n        children: \"Image URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"image\",\n        placeholder: \"Image URL\",\n        defaultValue: selectedBook ? selectedBook.image : \"\",\n        onBlur: e => setSelectedBook({\n          ...selectedBook,\n          image: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: selectedBook ? selectedBook.image : \"\",\n        alt: selectedBook ? selectedBook.name : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => update(selectedBook),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addNewBook,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: cancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Store, \"2bfKSNAf61ub6jDvMeOPfrdU96Y=\");\n_c = Store;\nexport default Store;\nvar _c;\n$RefreshReg$(_c, \"Store\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Store","_s","books","setBooks","selectedBook","setSelectedBook","isDialogOpen","setIsDialogOpen","showBook","response","fetch","data","json","error","console","log","deleteBook","book","myHeaders","Headers","append","raw","JSON","stringify","code","_id","requestOptions","method","headers","body","redirect","then","text","result","alert","prevCartItems","filter","item","catch","updateBook","document","getElementById","value","name","price","author","image","update","prevBooks","updatedBooks","updatedIndex","findIndex","cancel","addNewBook","children","className","src","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","alt","id","htmlFor","placeholder","defaultValue","onBlur","e","target","_c","$RefreshReg$"],"sources":["E:/react/myproject/src/pages/Store/Store.js"],"sourcesContent":["\r\n// import { useState, useEffect } from \"react\";\r\n// import \"./Store.css\"\r\n// const Store = () => {\r\n//   const [books, setBooks] = useState([]);\r\n//   const [selectedBook, setSelectedBook] = useState(null);\r\n\r\n//   async function showBook() {\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:7002/api/books\");\r\n//       const data = await response.json();\r\n//       setBooks(data);\r\n//     } catch (error) {\r\n//       console.log(\"failed to fetch\");\r\n//     }\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     showBook();\r\n//   }, []);\r\n\r\n//   const deleteBook = (book) => {\r\n//     var myHeaders = new Headers();\r\n//     myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n//     var raw = JSON.stringify({\r\n//       code: book._id\r\n//     });\r\n\r\n//     var requestOptions = {\r\n//       method: \"DELETE\",\r\n//       headers: myHeaders,\r\n//       body: raw,\r\n//       redirect: \"follow\"\r\n//     };\r\n\r\n//     fetch(\"http://localhost:7002/api/books\", requestOptions)\r\n//       .then((response) => response.text())\r\n//       .then((result) => {\r\n//         alert(result);\r\n//         setBooks((prevCartItems) =>\r\n//           prevCartItems.filter((item) => item._id !== book._id)\r\n//         );\r\n//       })\r\n//       .catch((error) => console.log(\"error\", error));\r\n//   };\r\n\r\n//   const updateBook = (book) => {\r\n//     setSelectedBook({...book});\r\n//     document.getElementById(\"dialog\").showModal();\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (selectedBook) {\r\n//       document.getElementById(\"name\").value = selectedBook.name;\r\n//       document.getElementById(\"code\").value = selectedBook.code;\r\n//       document.getElementById(\"price\").value = selectedBook.price;\r\n//       document.getElementById(\"author\").value = selectedBook.author;\r\n//       document.getElementById(\"image\").value = selectedBook.image;\r\n//     }\r\n//   }, [selectedBook]);\r\n//   const update = async (book) => {\r\n//     var myHeaders = new Headers();\r\n//     myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n//     var raw = JSON.stringify({\r\n//       name: book.name,\r\n//       code: book.code,\r\n//       price: book.price,\r\n//       author: book.author,\r\n//       image: book.image\r\n//     });\r\n\r\n//     var requestOptions = {\r\n//       method: \"PUT\",\r\n//       headers: myHeaders,\r\n//       body: raw,\r\n//       redirect: \"follow\"\r\n//     };\r\n\r\n//     fetch(\"http://localhost:7002/api/books\", requestOptions)\r\n//       .then((response) => response.text())\r\n//       .then((result) => {\r\n//         console.log(result);\r\n//         setBooks((prevBooks) => {\r\n//           const updatedBooks = [...prevBooks];\r\n//           const updatedIndex = updatedBooks.findIndex(\r\n//             (book) => book.code === selectedBook.code\r\n//           );\r\n//           updatedBooks[updatedIndex] = {\r\n//             ...updatedBooks[updatedIndex],\r\n//             name: book.name,\r\n//             code: book.code,\r\n//             price: book.price,\r\n//             author: book.author,\r\n//             image: book.image\r\n//           };\r\n//           return updatedBooks;\r\n//         });\r\n//       })\r\n//       .catch((error) => console.log(\"error\", error));\r\n\r\n//     document.getElementById(\"dialog\").close();\r\n//   };\r\n\r\n//   const cancel = () => {\r\n//     document.getElementById(\"dialog\").close();\r\n//   };\r\n\r\n// const addNewBook=()=>{\r\n\r\n//   var myHeaders = new Headers();\r\n// myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n// var raw = JSON.stringify({\r\n//   \"name\":document.getElementById(\"name\").value ,\r\n//   \"code\":document.getElementById(\"code\").value ,\r\n//   \"price\":document.getElementById(\"price\").value ,\r\n//   \"author\":document.getElementById(\"author\").value,\r\n//   \"image\":document.getElementById(\"image\").value \r\n// });\r\n\r\n// var requestOptions = {\r\n//   method: 'POST',\r\n//   headers: myHeaders,\r\n//   body: raw,\r\n//   redirect: 'follow'\r\n// };\r\n\r\n// fetch(\"http://localhost:7002/api/books\", requestOptions)\r\n//   .then(response => response.text())\r\n//   .then((result) => {\r\n//     alert(result);\r\n \r\n//   })\r\n//   .catch(error => console.log('error', error));\r\n  \r\n//   document.getElementById(\"dialog\").close();\r\n\r\n// }\r\n//   return (\r\n//     <>\r\n//      <img src=\"w.jpg\" style={{ heignt: \"180px\", width: \"180px\", fontFamily: \"initial\" }}></img>\r\n//       <button onClick={() => updateBook({})}>Add New Book</button>\r\n\r\n//       {books &&\r\n//         books.map((book, index) => {\r\n//           return (\r\n//             <div className=\"border\" key={book._id}>\r\n//               <img\r\n//                 src={book.image}\r\n//                 style={{ heignt: \"150px\", width: \"200px\", fontFamily: \"initial\" }}\r\n//               ></img>\r\n//               <div>{book.name + \" | \" + book.price + \"â‚ª\"}</div>\r\n//               <button key={index} onClick={() => updateBook(book)}>\r\n//                 Edit\r\n//               </button>\r\n\r\n//               <dialog id=\"dialog\">\r\n//                 <h1>Add/Edit-Book</h1>\r\n//               name\r\n//               <br></br>\r\n//                 <input id=\"name\" placeholder=\"name\" defaultValue={selectedBook ? selectedBook.name : \"\"} onBlur={(e) =>\r\n//                     setSelectedBook({\r\n//                       ...selectedBook,\r\n//                       name: e.target.value\r\n//                     })}></input>\r\n        \r\n//                 <br></br>\r\n//                 code\r\n//                 <br></br>\r\n//                 <input id=\"code\" placeholder=\"code\"\r\n               \r\n//                   defaultValue={selectedBook ? selectedBook.code : \"\"}\r\n//                   onBlur={(e) =>\r\n//                     setSelectedBook({\r\n//                       ...selectedBook,\r\n//                       code: e.target.value\r\n//                     })\r\n//                   }\r\n//                 ></input>\r\n//                 <br></br>\r\n//                 price\r\n//                 <br></br>\r\n//                 <input id=\"price\" placeholder=\"price\"\r\n//                   defaultValue={selectedBook ? selectedBook.price : \"\"}\r\n//                   onBlur={(e) =>\r\n//                     setSelectedBook({\r\n//                       ...selectedBook,\r\n//                       price: e.target.value\r\n//                     })\r\n//                   }\r\n//                 ></input>\r\n//                 <br></br>\r\n//                 author\r\n//                 <br></br>\r\n//                 <textarea id=\"author\" placeholder=\"author\"\r\n//                   defaultValue={selectedBook ? selectedBook.author : \"\"}\r\n//                   onBlur={(e) =>\r\n//                     setSelectedBook({\r\n//                       ...selectedBook,\r\n//                       author: e.target.value\r\n//                     })\r\n//                   }\r\n//                 ></textarea>\r\n//                 <br></br>\r\n//                 image-url\r\n//                 <br></br>\r\n//                 <input id=\"image\" placeholder=\"image url\"\r\n//                   defaultValue={selectedBook ? selectedBook.image : \"\"}\r\n//                   onBlur={(e) =>\r\n//                     setSelectedBook({\r\n//                       ...selectedBook,\r\n//                       image: e.target.value\r\n//                     })\r\n//                   }\r\n//                 ></input>\r\n//                 <br></br>\r\n//                 <img\r\n//                   src={selectedBook ? selectedBook.image : \"\"}\r\n//                   style={{ heignt: \"150px\", width: \"200px\", fontFamily: \"initial\" }}\r\n//                 ></img>\r\n//                 <br></br>\r\n//                 <button onClick={() => update(selectedBook)}>edit</button>\r\n//                 <button onClick={() =>addNewBook()}>create</button>\r\n//                 <button onClick={cancel}>cancel</button>\r\n//               </dialog>\r\n//               <button onClick={() => deleteBook(book)}>Remove</button>\r\n//             </div>\r\n//           );\r\n//         })}\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Store;\r\n// import { useState, useEffect } from \"react\";\r\n// import \"./Store.css\";\r\n\r\n// const Store = () => {\r\n//   const [books, setBooks] = useState([]);\r\n//   const [selectedBook, setSelectedBook] = useState(null);\r\n\r\n//   async function showBook() {\r\n//     try {\r\n//       const response = await fetch(\"http://localhost:7002/api/books\");\r\n//       const data = await response.json();\r\n//       setBooks(data);\r\n//     } catch (error) {\r\n//       console.log(\"failed to fetch\");\r\n//     }\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     showBook();\r\n//   }, []);\r\n\r\n//   const deleteBook = (book) => {\r\n//     var myHeaders = new Headers();\r\n//     myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n//     var raw = JSON.stringify({\r\n//       code: book._id\r\n//     });\r\n\r\n//     var requestOptions = {\r\n//       method: \"DELETE\",\r\n//       headers: myHeaders,\r\n//       body: raw,\r\n//       redirect: \"follow\"\r\n//     };\r\n\r\n//     fetch(\"http://localhost:7002/api/books\", requestOptions)\r\n//       .then((response) => response.text())\r\n//       .then((result) => {\r\n//         alert(result);\r\n//         setBooks((prevCartItems) =>\r\n//           prevCartItems.filter((item) => item._id !== book._id)\r\n//         );\r\n//       })\r\n//       .catch((error) => console.log(\"error\", error));\r\n//   };\r\n\r\n//   const updateBook = (book) => {\r\n//     setSelectedBook({ ...book });\r\n//     document.getElementById(\"dialog\").showModal();\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (selectedBook) {\r\n//       document.getElementById(\"name\").value = selectedBook.name;\r\n//       document.getElementById(\"code\").value = selectedBook.code;\r\n//       document.getElementById(\"price\").value = selectedBook.price;\r\n//       document.getElementById(\"author\").value = selectedBook.author;\r\n//       document.getElementById(\"image\").value = selectedBook.image;\r\n//     }\r\n//   }, [selectedBook]);\r\n\r\n//   const update = async (book) => {\r\n//     var myHeaders = new Headers();\r\n//     myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n//     var raw = JSON.stringify({\r\n//       name: book.name,\r\n//       code: book.code,\r\n//       price: book.price,\r\n//       author: book.author,\r\n//       image: book.image\r\n//     });\r\n\r\n//     var requestOptions = {\r\n//       method: \"PUT\",\r\n//       headers: myHeaders,\r\n//       body: raw,\r\n//       redirect: \"follow\"\r\n//     };\r\n\r\n//     fetch(\"http://localhost:7002/api/books\", requestOptions)\r\n//       .then((response) => response.text())\r\n//       .then((result) => {\r\n//         console.log(result);\r\n//         setBooks((prevBooks) => {\r\n//           const updatedBooks = [...prevBooks];\r\n//           const updatedIndex = updatedBooks.findIndex(\r\n//             (book) => book.code === selectedBook.code\r\n//           );\r\n//           updatedBooks[updatedIndex] = {\r\n//             ...updatedBooks[updatedIndex],\r\n//             name: book.name,\r\n//             code: book.code,\r\n//             price: book.price,\r\n//             author: book.author,\r\n//             image: book.image\r\n//           };\r\n//           return updatedBooks;\r\n//         });\r\n//       })\r\n//       .catch((error) => console.log(\"error\", error));\r\n\r\n//     document.getElementById(\"dialog\").close();\r\n//   };\r\n\r\n//   const cancel = () => {\r\n//     document.getElementById(\"dialog\").close();\r\n//   };\r\n\r\n//   const addNewBook = () => {\r\n//     var myHeaders = new Headers();\r\n//     myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n//     var raw = JSON.stringify({\r\n//       name: document.getElementById(\"name\").value,\r\n//       code: document.getElementById(\"code\").value,\r\n//       price: document.getElementById(\"price\").value,\r\n//       author: document.getElementById(\"author\").value,\r\n//       image: document.getElementById(\"image\").value\r\n//     });\r\n\r\n//     var requestOptions = {\r\n//       method: \"POST\",\r\n//       headers: myHeaders,\r\n//       body: raw,\r\n//       redirect: \"follow\"\r\n//     };\r\n\r\n//     fetch(\"http://localhost:7002/api/books\", requestOptions)\r\n//       .then((response) => response.text())\r\n//       .then((result) => {\r\n//         alert(result);\r\n//       })\r\n//       .catch((error) => console.log(\"error\", error));\r\n\r\n//     document.getElementById(\"dialog\").close();\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <div className=\"container\">\r\n//         <img src=\"w.jpg\" className=\"image\" />\r\n//         <button onClick={() => updateBook({})}>Add New Book</button>\r\n\r\n//         {books &&\r\n//           books.map((book, index) => (\r\n//             <div className=\"book-wrapper\" key={book._id}>\r\n//               <img src={book.image} />\r\n//               <div className=\"book-info\">\r\n//                 {book.name} | {book.price}â‚ª\r\n//               </div>\r\n//               <div className=\"button-group\">\r\n//                 <button onClick={() => updateBook(book)}>Edit</button>\r\n//                 <button onClick={() => deleteBook(book)}>Remove</button>\r\n//               </div>\r\n//             </div>\r\n//           ))}\r\n//       </div>\r\n\r\n//       <dialog id=\"dialog\" className=\"dialog\">\r\n//         <h1>Add/Edit Book</h1>\r\n//         <label >Name</label>\r\n//         <input\r\n//           id=\"name\"\r\n//           placeholder=\"Name\"\r\n//           defaultValue={selectedBook ? selectedBook.name : \"\"}\r\n//           onBlur={(e) =>\r\n//             setSelectedBook({ ...selectedBook, name: e.target.value })\r\n//           }\r\n//         />\r\n\r\n//         <label>Code</label>\r\n//         <input\r\n//           id=\"code\"\r\n//           placeholder=\"Code\"\r\n//           defaultValue={selectedBook ? selectedBook.code : \"\"}\r\n//           onBlur={(e) =>\r\n//             setSelectedBook({ ...selectedBook, code: e.target.value })\r\n//           }\r\n//         />\r\n\r\n//         <label >Price</label>\r\n//         <input\r\n//           id=\"price\"\r\n//           placeholder=\"Price\"\r\n//           defaultValue={selectedBook ? selectedBook.price : \"\"}\r\n//           onBlur={(e) =>\r\n//             setSelectedBook({ ...selectedBook, price: e.target.value })\r\n//           }\r\n//         />\r\n\r\n//         <label >Author</label>\r\n//         <textarea\r\n//           id=\"author\"\r\n//           placeholder=\"Author\"\r\n//           defaultValue={selectedBook ? selectedBook.author : \"\"}\r\n//           onBlur={(e) =>\r\n//             setSelectedBook({ ...selectedBook, author: e.target.value })\r\n//           }\r\n//         />\r\n\r\n//         <label>Image URL</label>\r\n//         <input\r\n//           id=\"image\"\r\n//           placeholder=\"Image URL\"\r\n//           defaultValue={selectedBook ? selectedBook.image : \"\"}\r\n//           onBlur={(e) =>\r\n//             setSelectedBook({ ...selectedBook, image: e.target.value })\r\n//           }\r\n//         />\r\n\r\n//         <img\r\n//           src={selectedBook ? selectedBook.image : \"\"}\r\n//           alt={selectedBook ? selectedBook.name : \"\"}\r\n//         />\r\n\r\n//         <div className=\"button-group\">\r\n//           <button onClick={() => update(selectedBook)}>Edit</button>\r\n//           <button onClick={addNewBook}>Create</button>\r\n//           <button onClick={cancel}>Cancel</button>\r\n//         </div>\r\n//       </dialog>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Store;\r\nimport { useState, useEffect } from \"react\";\r\nimport \"./store.css\";\r\n\r\nconst Store = () => {\r\n  const [books, setBooks] = useState([]);\r\n  const [selectedBook, setSelectedBook] = useState(null);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n\r\n  async function showBook() {\r\n    try {\r\n      const response = await fetch(\"http://localhost:7002/api/books\");\r\n      const data = await response.json();\r\n      setBooks(data);\r\n    } catch (error) {\r\n      console.log(\"failed to fetch\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    showBook();\r\n  }, []);\r\n\r\n  const deleteBook = (book) => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    var raw = JSON.stringify({\r\n      code: book._id\r\n    });\r\n\r\n    var requestOptions = {\r\n      method: \"DELETE\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\"\r\n    };\r\n\r\n    fetch(\"http://localhost:7002/api/books\", requestOptions)\r\n      .then((response) => response.text())\r\n      .then((result) => {\r\n        alert(result);\r\n        setBooks((prevCartItems) =>\r\n          prevCartItems.filter((item) => item._id !== book._id)\r\n        );\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n  };\r\n\r\n  const updateBook = (book) => {\r\n    setSelectedBook({ ...book });\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedBook) {\r\n      document.getElementById(\"name\").value = selectedBook.name;\r\n      document.getElementById(\"code\").value = selectedBook.code;\r\n      document.getElementById(\"price\").value = selectedBook.price;\r\n      document.getElementById(\"author\").value = selectedBook.author;\r\n      document.getElementById(\"image\").value = selectedBook.image;\r\n    }\r\n  }, [selectedBook]);\r\n\r\n  const update = async (book) => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    var raw = JSON.stringify({\r\n      name: book.name,\r\n      code: book.code,\r\n      price: book.price,\r\n      author: book.author,\r\n      image: book.image\r\n    });\r\n\r\n    var requestOptions = {\r\n      method: \"PUT\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\"\r\n    };\r\n\r\n    fetch(\"http://localhost:7002/api/books\", requestOptions)\r\n      .then((response) => response.text())\r\n      .then((result) => {\r\n        console.log(result);\r\n        setBooks((prevBooks) => {\r\n          const updatedBooks = [...prevBooks];\r\n          const updatedIndex = updatedBooks.findIndex(\r\n            (book) => book.code === selectedBook.code\r\n          );\r\n          updatedBooks[updatedIndex] = {\r\n            ...updatedBooks[updatedIndex],\r\n            name: book.name,\r\n            code: book.code,\r\n            price: book.price,\r\n            author: book.author,\r\n            image: book.image\r\n          };\r\n          return updatedBooks;\r\n        });\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  const addNewBook = () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n    var raw = JSON.stringify({\r\n      name: document.getElementById(\"name\").value,\r\n      code: document.getElementById(\"code\").value,\r\n      price: document.getElementById(\"price\").value,\r\n      author: document.getElementById(\"author\").value,\r\n      image: document.getElementById(\"image\").value\r\n    });\r\n\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      headers: myHeaders,\r\n      body: raw,\r\n      redirect: \"follow\"\r\n    };\r\n\r\n    fetch(\"http://localhost:7002/api/books\", requestOptions)\r\n      .then((response) => response.text())\r\n      .then((result) => {\r\n        alert(result);\r\n      })\r\n      .catch((error) => console.log(\"error\", error));\r\n\r\n    setIsDialogOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <img src=\"w.jpg\" className=\"image\" />\r\n        <button onClick={() => updateBook({})}>Add New Book</button>\r\n\r\n        {books &&\r\n          books.map((book, index) => (\r\n            <div className=\"book-wrapper\" key={book._id}>\r\n              <img src={book.image} alt={book.name} />\r\n              <div className=\"book-info\">\r\n                {book.name} | {book.price}â‚ª\r\n              </div>\r\n              <div className=\"button-group\">\r\n                <button onClick={() => updateBook(book)}>Edit</button>\r\n                <button onClick={() => deleteBook(book)}>Remove</button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n\r\n      {isDialogOpen && (\r\n        <dialog id=\"dialog\" className=\"dialog\">\r\n          <h1>Add/Edit Book</h1>\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input\r\n            id=\"name\"\r\n            placeholder=\"Name\"\r\n            defaultValue={selectedBook ? selectedBook.name : \"\"}\r\n            onBlur={(e) =>\r\n              setSelectedBook({ ...selectedBook, name: e.target.value })\r\n            }\r\n          />\r\n\r\n          <label htmlFor=\"code\">Code</label>\r\n          <input\r\n            id=\"code\"\r\n            placeholder=\"Code\"\r\n            defaultValue={selectedBook ? selectedBook.code : \"\"}\r\n            onBlur={(e) =>\r\n              setSelectedBook({ ...selectedBook, code: e.target.value })\r\n            }\r\n          />\r\n\r\n          <label htmlFor=\"price\">Price</label>\r\n          <input\r\n            id=\"price\"\r\n            placeholder=\"Price\"\r\n            defaultValue={selectedBook ? selectedBook.price : \"\"}\r\n            onBlur={(e) =>\r\n              setSelectedBook({ ...selectedBook, price: e.target.value })\r\n            }\r\n          />\r\n\r\n          <label htmlFor=\"author\">Author</label>\r\n          <textarea\r\n            id=\"author\"\r\n            placeholder=\"Author\"\r\n            defaultValue={selectedBook ? selectedBook.author : \"\"}\r\n            onBlur={(e) =>\r\n              setSelectedBook({ ...selectedBook, author: e.target.value })\r\n            }\r\n          />\r\n\r\n          <label htmlFor=\"image\">Image URL</label>\r\n          <input\r\n            id=\"image\"\r\n            placeholder=\"Image URL\"\r\n            defaultValue={selectedBook ? selectedBook.image : \"\"}\r\n            onBlur={(e) =>\r\n              setSelectedBook({ ...selectedBook, image: e.target.value })\r\n            }\r\n          />\r\n\r\n          <img\r\n            src={selectedBook ? selectedBook.image : \"\"}\r\n            alt={selectedBook ? selectedBook.name : \"\"}\r\n          />\r\n\r\n          <div className=\"button-group\">\r\n            <button onClick={() => update(selectedBook)}>Edit</button>\r\n            <button onClick={addNewBook}>Create</button>\r\n            <button onClick={cancel}>Cancel</button>\r\n          </div>\r\n        </dialog>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Store;"],"mappings":";;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACY,YAAY,EAAEC,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"},"metadata":{},"sourceType":"module","externalDependencies":[]}