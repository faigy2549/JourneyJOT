{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import { fetchEntries } from '../Services/TripService';\n// import { Carousel } from 'primereact/carousel';\n// import { Card } from 'primereact/card';\n// import { Dialog } from 'primereact/dialog';\n\n// const TripsView = () => {\n//   const [entries, setEntries] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [visible, setVisible] = useState(false);\n//   const [selectedEntry, setSelectedEntry] = useState(null);\n\n//   useEffect(() => {\n//     fetchEntries()\n//       .then(data => {\n//         const sortedEntries = data.sort((a, b) => new Date(a.startDate) - new Date(b.startDate));\n//         setEntries(sortedEntries);\n//         setLoading(false);\n//       })\n//       .catch(error => {\n//         console.error('Error fetching entries:', error);\n//         setError(error);\n//         setLoading(false);\n//       });\n//   }, []);\n\n//   if (loading) {\n//     return <p>Loading...</p>;\n//   }\n\n//   if (error) {\n//     return <p>Error: {error.message}</p>;\n//   }\n\n//   const getCardClassName = (startDate, endDate) => {\n//     const now = new Date();\n//     const start = new Date(startDate);\n//     const end = new Date(endDate);\n\n//     if (start > now) {\n//       return 'future-trip';\n//     } else if (end < now) {\n//       return 'past-trip';\n//     } else {\n//       return 'current-trip';\n//     }\n//   };\n// //use prime react tags\n//   const cardTemplate = (entry) => {\n//     const cardClassName = getCardClassName(entry.startDate, entry.endDate);\n//     const cardStyles = {\n//       width: '16rem',\n//       height: '16rem',\n//       border: cardClassName === 'current-trip' ? '4px solid orange' :\n//               cardClassName === 'past-trip' ? '4px solid red' :\n//               '4px solid green',\n//       cursor: 'pointer',\n//       backgroundImage: `url('https://localhost:44393/${entry.coverPhotoUrl}')`,\n//       backgroundSize: 'cover',\n//       backgroundPosition: 'center',\n//       color: 'white',\n//       position: 'relative',\n//     };\n\n//     const headerStyles = {\n//       position: 'absolute',\n//       top: '0',\n//       left: '0',\n//       width: '100%',\n//       backgroundColor: cardClassName === 'current-trip' ? 'orange' :\n//                        cardClassName === 'past-trip' ? 'red' :\n//                        'green',\n//       padding: '0.5rem',\n//       fontSize: '1rem',\n//       fontWeight: 'bold',\n//       color: 'white',\n//       zIndex: '1',\n//     };\n\n//     const handleClick = () => {\n//       setSelectedEntry(entry);\n//       setVisible(true);\n//     };\n\n//     return (\n//       <Card className=\"trip-card\" style={cardStyles} onClick={handleClick}>\n//         <div style={headerStyles}>\n//           {entry.title}\n//           <p style={{ color: 'white', fontSize: '0.8rem', marginTop: '0.5rem' }}>\n//             {new Date(entry.startDate).toLocaleDateString()} - {new Date(entry.endDate).toLocaleDateString()}\n//           </p>\n//         </div>\n//         <div className=\"p-card-content\">\n//           {/* Optionally add more content below the header */}\n//         </div>\n//       </Card>\n//     );\n//   };\n\n//   const onHide = () => {\n//     setVisible(false);\n//   };\n\n//   return (\n//     <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', height: '100vh' }}>\n//       <Carousel value={entries} itemTemplate={cardTemplate} numVisible={3} numScroll={1} responsiveOptions={[\n//         {\n//           breakpoint: '1024px',\n//           numVisible: 2,\n//           numScroll: 1,\n//         },\n//         {\n//           breakpoint: '768px',\n//           numVisible: 1,\n//           numScroll: 1,\n//         }\n//       ]} />\n\n//       <Dialog visible={visible} onHide={onHide}>\n//         {selectedEntry && (\n//           <>\n//             <h3>{selectedEntry.title}</h3>\n//             <p>{selectedEntry.description}</p>\n//           </>\n//         )}\n//       </Dialog>\n//     </div>\n//   );\n// };\n\n// export default TripsView;","map":{"version":3,"names":[],"sources":["C:/Users/faigy/OneDrive/Documents/travel journal project/travel-journal client/myproject/src/components/TripsView.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { fetchEntries } from '../Services/TripService';\r\n// import { Carousel } from 'primereact/carousel';\r\n// import { Card } from 'primereact/card';\r\n// import { Dialog } from 'primereact/dialog';\r\n\r\n// const TripsView = () => {\r\n//   const [entries, setEntries] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n//   const [visible, setVisible] = useState(false);\r\n//   const [selectedEntry, setSelectedEntry] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     fetchEntries()\r\n//       .then(data => {\r\n//         const sortedEntries = data.sort((a, b) => new Date(a.startDate) - new Date(b.startDate));\r\n//         setEntries(sortedEntries);\r\n//         setLoading(false);\r\n//       })\r\n//       .catch(error => {\r\n//         console.error('Error fetching entries:', error);\r\n//         setError(error);\r\n//         setLoading(false);\r\n//       });\r\n//   }, []);\r\n\r\n//   if (loading) {\r\n//     return <p>Loading...</p>;\r\n//   }\r\n\r\n//   if (error) {\r\n//     return <p>Error: {error.message}</p>;\r\n//   }\r\n\r\n//   const getCardClassName = (startDate, endDate) => {\r\n//     const now = new Date();\r\n//     const start = new Date(startDate);\r\n//     const end = new Date(endDate);\r\n\r\n//     if (start > now) {\r\n//       return 'future-trip';\r\n//     } else if (end < now) {\r\n//       return 'past-trip';\r\n//     } else {\r\n//       return 'current-trip';\r\n//     }\r\n//   };\r\n// //use prime react tags\r\n//   const cardTemplate = (entry) => {\r\n//     const cardClassName = getCardClassName(entry.startDate, entry.endDate);\r\n//     const cardStyles = {\r\n//       width: '16rem',\r\n//       height: '16rem',\r\n//       border: cardClassName === 'current-trip' ? '4px solid orange' :\r\n//               cardClassName === 'past-trip' ? '4px solid red' :\r\n//               '4px solid green',\r\n//       cursor: 'pointer',\r\n//       backgroundImage: `url('https://localhost:44393/${entry.coverPhotoUrl}')`,\r\n//       backgroundSize: 'cover',\r\n//       backgroundPosition: 'center',\r\n//       color: 'white',\r\n//       position: 'relative',\r\n//     };\r\n\r\n//     const headerStyles = {\r\n//       position: 'absolute',\r\n//       top: '0',\r\n//       left: '0',\r\n//       width: '100%',\r\n//       backgroundColor: cardClassName === 'current-trip' ? 'orange' :\r\n//                        cardClassName === 'past-trip' ? 'red' :\r\n//                        'green',\r\n//       padding: '0.5rem',\r\n//       fontSize: '1rem',\r\n//       fontWeight: 'bold',\r\n//       color: 'white',\r\n//       zIndex: '1',\r\n//     };\r\n\r\n//     const handleClick = () => {\r\n//       setSelectedEntry(entry);\r\n//       setVisible(true);\r\n//     };\r\n\r\n//     return (\r\n//       <Card className=\"trip-card\" style={cardStyles} onClick={handleClick}>\r\n//         <div style={headerStyles}>\r\n//           {entry.title}\r\n//           <p style={{ color: 'white', fontSize: '0.8rem', marginTop: '0.5rem' }}>\r\n//             {new Date(entry.startDate).toLocaleDateString()} - {new Date(entry.endDate).toLocaleDateString()}\r\n//           </p>\r\n//         </div>\r\n//         <div className=\"p-card-content\">\r\n//           {/* Optionally add more content below the header */}\r\n//         </div>\r\n//       </Card>\r\n//     );\r\n//   };\r\n\r\n//   const onHide = () => {\r\n//     setVisible(false);\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center', height: '100vh' }}>\r\n//       <Carousel value={entries} itemTemplate={cardTemplate} numVisible={3} numScroll={1} responsiveOptions={[\r\n//         {\r\n//           breakpoint: '1024px',\r\n//           numVisible: 2,\r\n//           numScroll: 1,\r\n//         },\r\n//         {\r\n//           breakpoint: '768px',\r\n//           numVisible: 1,\r\n//           numScroll: 1,\r\n//         }\r\n//       ]} />\r\n\r\n//       <Dialog visible={visible} onHide={onHide}>\r\n//         {selectedEntry && (\r\n//           <>\r\n//             <h3>{selectedEntry.title}</h3>\r\n//             <p>{selectedEntry.description}</p>\r\n//           </>\r\n//         )}\r\n//       </Dialog>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default TripsView;\r\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}