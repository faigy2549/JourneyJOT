{"ast":null,"code":"import React from 'react';\nconst BASE_URL = 'https://localhost:44393/api/Authentication';\nconst Login = async (username, password) => {\n  try {\n    const response = await fetch(`${BASE_URL}/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      mode: 'cors',\n      credentials: 'include'\n    });\n    if (!response.ok) {\n      // Check if the response is not OK (200)\n      throw new Error('Login failed');\n    }\n    console.log(\"auth\", response);\n    return true;\n  } catch (error) {\n    throw error; // Re-throw the error for handling in the component\n  }\n};\n_c = Login;\nconst Register = async (username, password, confirmPassword, email) => {\n  try {\n    const response = await fetch(`${BASE_URL}/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password,\n        confirmPassword,\n        email\n      }),\n      mode: 'cors'\n    });\n    if (response.status !== 201) {\n      // Check for successful creation (201 Created)\n      throw new Error('Registration failed');\n    }\n    const responseData = await response.json(); // Parse the response data as JSON\n    return true; // Or return a success message\n  } catch (error) {\n    throw error; // Re-throw the error for handling in the component\n  }\n};\n_c2 = Register;\nexport { Login, Register };\nvar _c, _c2;\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"Register\");","map":{"version":3,"names":["React","BASE_URL","Login","username","password","response","fetch","method","headers","body","JSON","stringify","mode","credentials","ok","Error","console","log","error","_c","Register","confirmPassword","email","status","responseData","json","_c2","$RefreshReg$"],"sources":["C:/Users/faigy/OneDrive/Documents/travel journal project/travel-journal client/myproject/src/Services/AuthenticationService.js"],"sourcesContent":["import React from 'react';\r\nconst BASE_URL = 'https://localhost:44393/api/Authentication'; \r\n\r\nconst Login = async (username, password) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ username, password }),\r\n      mode: 'cors', \r\n      credentials: 'include',\r\n    });\r\n\r\n    if (!response.ok) { // Check if the response is not OK (200)\r\n      throw new Error('Login failed');\r\n    }\r\n    console.log(\"auth\", response);\r\n    return true; \r\n  } catch (error) {\r\n    throw error; // Re-throw the error for handling in the component\r\n  }\r\n};\r\n\r\nconst Register = async (username, password, confirmPassword, email) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/register`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ username, password, confirmPassword, email }),\r\n      mode: 'cors', \r\n    });\r\n\r\n    if (response.status !== 201) { // Check for successful creation (201 Created)\r\n      throw new Error('Registration failed');\r\n    }\r\n\r\n    const responseData = await response.json(); // Parse the response data as JSON\r\n    return true; // Or return a success message\r\n  } catch (error) {\r\n    throw error; // Re-throw the error for handling in the component\r\n  }\r\n};\r\n\r\nexport { Login, Register };"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,QAAQ,GAAG,4CAA4C;AAE7D,MAAMC,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAC1C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,QAAO,EAAE;MAChDM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,QAAQ;QAAEC;MAAS,CAAC,CAAC;MAC5CQ,IAAI,EAAE,MAAM;MACZC,WAAW,EAAE;IACf,CAAC,CAAC;IAEF,IAAI,CAACR,QAAQ,CAACS,EAAE,EAAE;MAAE;MAClB,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;IACjC;IACAC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEZ,QAAQ,CAAC;IAC7B,OAAO,IAAI;EACb,CAAC,CAAC,OAAOa,KAAK,EAAE;IACd,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;AAACC,EAAA,GApBIjB,KAAK;AAsBX,MAAMkB,QAAQ,GAAG,MAAAA,CAAOjB,QAAQ,EAAEC,QAAQ,EAAEiB,eAAe,EAAEC,KAAK,KAAK;EACrE,IAAI;IACF,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,WAAU,EAAE;MACnDM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,QAAQ;QAAEC,QAAQ;QAAEiB,eAAe;QAAEC;MAAM,CAAC,CAAC;MACpEV,IAAI,EAAE;IACR,CAAC,CAAC;IAEF,IAAIP,QAAQ,CAACkB,MAAM,KAAK,GAAG,EAAE;MAAE;MAC7B,MAAM,IAAIR,KAAK,CAAC,qBAAqB,CAAC;IACxC;IAEA,MAAMS,YAAY,GAAG,MAAMnB,QAAQ,CAACoB,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5C,OAAO,IAAI,CAAC,CAAC;EACf,CAAC,CAAC,OAAOP,KAAK,EAAE;IACd,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;AAACQ,GAAA,GApBIN,QAAQ;AAsBd,SAASlB,KAAK,EAAEkB,QAAQ;AAAG,IAAAD,EAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}