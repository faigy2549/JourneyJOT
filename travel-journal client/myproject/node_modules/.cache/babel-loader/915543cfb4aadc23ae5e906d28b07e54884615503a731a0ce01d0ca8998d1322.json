{"ast":null,"code":"const loginService = async user => {\n  // TODO: here call server by fetch\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  var raw = JSON.stringify({\n    \"userName\": user.userName,\n    \"password\": user.password\n  });\n  var requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n  var res;\n  await fetch(\"http://localhost:7002/api/auths/login\", requestOptions).then(response => response.text()).then(result => {\n    res = result;\n    console.log(result);\n  }).catch(error => {\n    console.log('error', error);\n    throw error(\"login error\");\n  });\n  var a = JSON.parse(res).message;\n  //alert(a)\n  sessionStorage.setItem(\"user\", user.userName);\n  return new Promise((resolve, reject) => {\n    resolve({\n      loginStatus: a == undefined ? \"ok\" : \"unknown\",\n      data: {\n        id: user.password,\n        name: user.userName,\n        userToken: res\n      }\n    });\n  });\n};\nconst registerService = _ref => {\n  let {\n    name,\n    email,\n    phone,\n    userName,\n    password\n  } = _ref;\n  // TODO: here call server by fetch\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  var raw = JSON.stringify({\n    \"name\": name,\n    \"email\": email,\n    \"phone\": phone,\n    \"userName\": userName,\n    \"password\": password\n  });\n  if (userName == \"\" || password == \"\" || name == \"\") {\n    alert(\"name and password are require!\");\n  } else {\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    fetch(\"http://localhost:7002/api/auths/register\", requestOptions).then(response => response.text()).then(result => alert(result)).catch(error => console.log('error', error));\n    console.log(\"registered!\");\n  }\n};\nexport { loginService, registerService };","map":{"version":3,"names":["loginService","user","myHeaders","Headers","append","raw","JSON","stringify","userName","password","requestOptions","method","headers","body","redirect","res","fetch","then","response","text","result","console","log","catch","error","a","parse","message","sessionStorage","setItem","Promise","resolve","reject","loginStatus","undefined","data","id","name","userToken","registerService","_ref","email","phone","alert"],"sources":["F:/react/myproject/src/services.js"],"sourcesContent":["\r\nconst loginService = async (user) => {\r\n\r\n  // TODO: here call server by fetch\r\n  var myHeaders = new Headers();\r\n  myHeaders.append(\"Content-Type\", \"application/json\");\r\n  \r\n  var raw = JSON.stringify({\r\n    \"userName\": user.userName,\r\n    \"password\": user.password\r\n  });\r\n  \r\n  var requestOptions = {\r\n    method: 'POST',\r\n    headers: myHeaders,\r\n    body: raw,\r\n    redirect: 'follow'\r\n  };\r\n  var res;\r\n \r\n  await fetch(\"http://localhost:7002/api/auths/login\", requestOptions)\r\n    .then(response => response.text())\r\n    .then(result=>{res=result\r\n       console.log(result)})\r\n    .catch(error => {\r\n      console.log('error', error)\r\n      throw error(\"login error\")\r\n    });\r\n   \r\n  var a=JSON.parse(res).message\r\n    //alert(a)\r\n    sessionStorage.setItem(\"user\", user.userName);\r\n  return new Promise((resolve, reject) => {\r\n    resolve({\r\n      loginStatus :a == undefined ? \"ok\": \"unknown\",\r\n      data: { id: user.password, name: user.userName, userToken: res },\r\n   \r\n    });\r\n  });\r\n};\r\n\r\n\r\n\r\nconst registerService = ({ name, email, phone, userName, password }) => {\r\n\r\n  // TODO: here call server by fetch\r\n  var myHeaders = new Headers();\r\nmyHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\nvar raw = JSON.stringify({\r\n  \"name\": name,\r\n  \"email\":email,\r\n  \"phone\":phone,\r\n  \"userName\":userName,\r\n  \"password\":password\r\n\r\n});\r\nif(userName==\"\"||password==\"\"||name==\"\"){\r\n  alert(\"name and password are require!\")\r\n  \r\n}  \r\nelse{\r\nvar requestOptions = {\r\n  method: 'POST',\r\n  headers: myHeaders,\r\n  body: raw,\r\n  redirect: 'follow'\r\n};\r\n\r\nfetch(\"http://localhost:7002/api/auths/register\", requestOptions)\r\n  .then(response => response.text())\r\n  .then(result => alert(result))\r\n\r\n  .catch(error => console.log('error', error))\r\n  \r\n  console.log(\"registered!\");\r\n\r\n}}\r\n\r\nexport { loginService, registerService };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}