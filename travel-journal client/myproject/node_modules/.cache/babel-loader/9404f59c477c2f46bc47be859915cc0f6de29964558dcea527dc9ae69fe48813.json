{"ast":null,"code":"import setProducts from \"./pages/Register/Register\";\nconst loginService = async user => {\n  // TODO: here call server by fetch\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  var raw = JSON.stringify({\n    \"userName\": user.userName,\n    \"password\": user.password\n  });\n  var requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n  var res;\n  debugger;\n  await fetch(\"http://localhost:7002/api/auths/login\", requestOptions).then(response => response.text()).then(result => {\n    res = result;\n    console.log(result);\n  }).catch(error => console.log('error', error));\n  var a = JSON.parse(res);\n  debugger;\n  return new Promise((resolve, reject) => {\n    if (a == undefined) {\n      resolve({\n        loginStatus: \"ok\",\n        data: {\n          id: user.password,\n          name: user.userName,\n          userToken: res\n        }\n      });\n    } else {\n      reject({\n        loginStatus: \"unknown\"\n      });\n    }\n  });\n  debugger;\n\n  // fetch(\"http://localhost:7002/api/auths/login\", requestOptions)\n  // .then(response => response.text())\n  // .then(result => {\n  //   const loginStatus = result!= `{\"\"unautharized\"\"}` ? \"ok\" : \"unknown\";\n  //   const data = loginStatus === \"ok\" ? {\n  //     id: user.password,\n  //     name: user.userName,\n  //     userToken: result\n  //   } : null;\n  //   debugger\n  //   return {\n  //     loginStatus: loginStatus,\n  //     data: data\n  //   };\n  // })\n  // .catch(error => {\n  //   console.log('error', error);\n  //   return {\n  //     loginStatus: \"unknown\",\n  //     data: null\n  //   };\n  // });\n};\n\nconst registerService = () => {\n  // TODO: here call server by fetch\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  var raw = JSON.stringify({\n    \"name\": \"chfa\",\n    \"userName\": \"fc\",\n    \"password\": \"ffcc\"\n  });\n  var requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n  fetch(\"http://localhost:7002/api/auths/register\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\n  console.log(\"registered!\");\n};\nexport { loginService, registerService };","map":{"version":3,"names":["setProducts","loginService","user","myHeaders","Headers","append","raw","JSON","stringify","userName","password","requestOptions","method","headers","body","redirect","res","fetch","then","response","text","result","console","log","catch","error","a","parse","Promise","resolve","reject","undefined","loginStatus","data","id","name","userToken","registerService"],"sources":["E:/project/myproject/src/services.js"],"sourcesContent":["import setProducts from \"./pages/Register/Register\"\r\nconst loginService = async (user) => {\r\n  // TODO: here call server by fetch\r\n  var myHeaders = new Headers();\r\n  myHeaders.append(\"Content-Type\", \"application/json\");\r\n  \r\n  var raw = JSON.stringify({\r\n    \"userName\": user.userName,\r\n    \"password\": user.password\r\n  });\r\n  \r\n  var requestOptions = {\r\n    method: 'POST',\r\n    headers: myHeaders,\r\n    body: raw,\r\n    redirect: 'follow'\r\n  };\r\n  var res;\r\n  \r\n  debugger\r\n  await fetch(\"http://localhost:7002/api/auths/login\", requestOptions)\r\n    .then(response => response.text())\r\n    .then(result=>{res=result\r\n       console.log(result)})\r\n    .catch(error => console.log('error', error));\r\n  var a=JSON.parse(res)\r\n    debugger\r\n  return new Promise((resolve, reject) => {\r\n    if(a==undefined){\r\n    resolve({\r\n      loginStatus: \"ok\",\r\n      data: { id: user.password, name: user.userName, userToken: res },\r\n      \r\n    })}\r\n    else{\r\n    reject({\r\n      loginStatus: \"unknown\"\r\n    });\r\n  }\r\n  });\r\n  debugger\r\n \r\n// fetch(\"http://localhost:7002/api/auths/login\", requestOptions)\r\n// .then(response => response.text())\r\n// .then(result => {\r\n//   const loginStatus = result!= `{\"\"unautharized\"\"}` ? \"ok\" : \"unknown\";\r\n//   const data = loginStatus === \"ok\" ? {\r\n//     id: user.password,\r\n//     name: user.userName,\r\n//     userToken: result\r\n//   } : null;\r\n//   debugger\r\n//   return {\r\n//     loginStatus: loginStatus,\r\n//     data: data\r\n//   };\r\n// })\r\n// .catch(error => {\r\n//   console.log('error', error);\r\n//   return {\r\n//     loginStatus: \"unknown\",\r\n//     data: null\r\n//   };\r\n// });\r\n};\r\n\r\n\r\n\r\nconst registerService = () => {\r\n  // TODO: here call server by fetch\r\n  var myHeaders = new Headers();\r\nmyHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\nvar raw = JSON.stringify({\r\n  \"name\": \"chfa\",\r\n  \"userName\": \"fc\",\r\n  \"password\": \"ffcc\"\r\n});\r\n\r\nvar requestOptions = {\r\n  method: 'POST',\r\n  headers: myHeaders,\r\n  body: raw,\r\n  redirect: 'follow'\r\n};\r\n\r\nfetch(\"http://localhost:7002/api/auths/register\", requestOptions)\r\n  .then(response => response.text())\r\n  .then(result => console.log(result))\r\n  .catch(error => console.log('error', error));\r\n  console.log(\"registered!\");\r\n};\r\n\r\nexport { loginService, registerService };\r\n"],"mappings":"AAAA,OAAOA,WAAW,MAAM,2BAA2B;AACnD,MAAMC,YAAY,GAAG,MAAOC,IAAI,IAAK;EACnC;EACA,IAAIC,SAAS,GAAG,IAAIC,OAAO,CAAC,CAAC;EAC7BD,SAAS,CAACE,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC;EAEpD,IAAIC,GAAG,GAAGC,IAAI,CAACC,SAAS,CAAC;IACvB,UAAU,EAAEN,IAAI,CAACO,QAAQ;IACzB,UAAU,EAAEP,IAAI,CAACQ;EACnB,CAAC,CAAC;EAEF,IAAIC,cAAc,GAAG;IACnBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAEV,SAAS;IAClBW,IAAI,EAAER,GAAG;IACTS,QAAQ,EAAE;EACZ,CAAC;EACD,IAAIC,GAAG;EAEP;EACA,MAAMC,KAAK,CAAC,uCAAuC,EAAEN,cAAc,CAAC,CACjEO,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,MAAM,IAAE;IAACL,GAAG,GAACK,MAAM;IACtBC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EAAA,CAAC,CAAC,CACvBG,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEE,KAAK,CAAC,CAAC;EAC9C,IAAIC,CAAC,GAACnB,IAAI,CAACoB,KAAK,CAACX,GAAG,CAAC;EACnB;EACF,OAAO,IAAIY,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC,IAAGJ,CAAC,IAAEK,SAAS,EAAC;MAChBF,OAAO,CAAC;QACNG,WAAW,EAAE,IAAI;QACjBC,IAAI,EAAE;UAAEC,EAAE,EAAEhC,IAAI,CAACQ,QAAQ;UAAEyB,IAAI,EAAEjC,IAAI,CAACO,QAAQ;UAAE2B,SAAS,EAAEpB;QAAI;MAEjE,CAAC,CAAC;IAAA,CAAC,MACC;MACJc,MAAM,CAAC;QACLE,WAAW,EAAE;MACf,CAAC,CAAC;IACJ;EACA,CAAC,CAAC;EACF;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA,CAAC;;AAID,MAAMK,eAAe,GAAGA,CAAA,KAAM;EAC5B;EACA,IAAIlC,SAAS,GAAG,IAAIC,OAAO,CAAC,CAAC;EAC/BD,SAAS,CAACE,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC;EAEpD,IAAIC,GAAG,GAAGC,IAAI,CAACC,SAAS,CAAC;IACvB,MAAM,EAAE,MAAM;IACd,UAAU,EAAE,IAAI;IAChB,UAAU,EAAE;EACd,CAAC,CAAC;EAEF,IAAIG,cAAc,GAAG;IACnBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAEV,SAAS;IAClBW,IAAI,EAAER,GAAG;IACTS,QAAQ,EAAE;EACZ,CAAC;EAEDE,KAAK,CAAC,0CAA0C,EAAEN,cAAc,CAAC,CAC9DO,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,MAAM,IAAIC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC,CAAC,CACnCG,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEE,KAAK,CAAC,CAAC;EAC5CH,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;AAC5B,CAAC;AAED,SAAStB,YAAY,EAAEoC,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}