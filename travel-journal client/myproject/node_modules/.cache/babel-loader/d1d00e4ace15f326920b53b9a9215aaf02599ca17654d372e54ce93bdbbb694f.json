{"ast":null,"code":"const BASE_URL = 'https://localhost:44393/api/Authentication';\nconst login = async (username, password) => {\n  try {\n    const response = await fetch(`${BASE_URL}/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      mode: 'cors'\n    });\n    if (response.data.token) {\n      // Login successful, store token (implementation depends on your app)\n      localStorage.setItem('userToken', response.data.token);\n      return true; // Or return the token itself\n    } else {\n      throw new Error('Login failed');\n    }\n  } catch (error) {\n    throw error; // Re-throw the error for handling in the component\n  }\n};\n\nconst register = async (username, password, confirmPassword, email) => {\n  try {\n    const response = await fetch(`${BASE_URL}/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      mode: 'cors'\n    });\n    if (response.status === 201) {\n      // Check for successful creation (201 Created)\n      return true; // Or return a success message\n    } else {\n      throw new Error('Registration failed');\n    }\n  } catch (error) {\n    throw error; // Re-throw the error for handling in the component\n  }\n};\n\nexport { login, register };","map":{"version":3,"names":["BASE_URL","login","username","password","response","fetch","method","headers","body","JSON","stringify","mode","data","token","localStorage","setItem","Error","error","register","confirmPassword","email","status"],"sources":["C:/Users/faigy/OneDrive/Documents/travel journal project/travel-journal client/myproject/src/Services/AuthenticationService.js"],"sourcesContent":["const BASE_URL = 'https://localhost:44393/api/Authentication'; \r\n\r\nconst login = async (username, password) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ username, password }),\r\n      mode: 'cors', \r\n    });\r\n\r\n    if (response.data.token) {\r\n      // Login successful, store token (implementation depends on your app)\r\n      localStorage.setItem('userToken', response.data.token);\r\n      return true; // Or return the token itself\r\n    } else {\r\n      throw new Error('Login failed');\r\n    }\r\n  } catch (error) {\r\n    throw error; // Re-throw the error for handling in the component\r\n  }\r\n};\r\n\r\nconst register = async (username, password, confirmPassword, email) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ username, password }),\r\n      mode: 'cors', \r\n    });\r\n    if (response.status === 201) { // Check for successful creation (201 Created)\r\n      return true; // Or return a success message\r\n    } else {\r\n      throw new Error('Registration failed');\r\n    }\r\n  } catch (error) {\r\n    throw error; // Re-throw the error for handling in the component\r\n  }\r\n};\r\n\r\nexport { login, register };"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,4CAA4C;AAE7D,MAAMC,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAC1C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,QAAO,EAAE;MAChDM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,QAAQ;QAAEC;MAAS,CAAC,CAAC;MAC5CQ,IAAI,EAAE;IACR,CAAC,CAAC;IAEF,IAAIP,QAAQ,CAACQ,IAAI,CAACC,KAAK,EAAE;MACvB;MACAC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEX,QAAQ,CAACQ,IAAI,CAACC,KAAK,CAAC;MACtD,OAAO,IAAI,CAAC,CAAC;IACf,CAAC,MAAM;MACL,MAAM,IAAIG,KAAK,CAAC,cAAc,CAAC;IACjC;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;;AAED,MAAMC,QAAQ,GAAG,MAAAA,CAAOhB,QAAQ,EAAEC,QAAQ,EAAEgB,eAAe,EAAEC,KAAK,KAAK;EACrE,IAAI;IACF,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEL,QAAS,QAAO,EAAE;MAChDM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,QAAQ;QAAEC;MAAS,CAAC,CAAC;MAC5CQ,IAAI,EAAE;IACR,CAAC,CAAC;IACF,IAAIP,QAAQ,CAACiB,MAAM,KAAK,GAAG,EAAE;MAAE;MAC7B,OAAO,IAAI,CAAC,CAAC;IACf,CAAC,MAAM;MACL,MAAM,IAAIL,KAAK,CAAC,qBAAqB,CAAC;IACxC;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;;AAED,SAAShB,KAAK,EAAEiB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}